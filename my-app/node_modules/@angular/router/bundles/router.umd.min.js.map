{"version":3,"sources":["packages/router/router.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","router","common","core","tslib","rxjs","operators","platformBrowser","this","tslib_1","RouterEvent","NavigationStart","_super","id","url","navigationTrigger","restoredState","_this","call","__extends","prototype","toString","NavigationEnd","urlAfterRedirects","NavigationCancel","reason","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","route","path","RouteConfigLoadEnd","ChildActivationStart","snapshot","routeConfig","ChildActivationEnd","ActivationStart","ActivationEnd","PRIMARY_OUTLET","ParamsAsMap","params","has","name","hasOwnProperty","get","v","Array","isArray","getAll","Object","defineProperty","keys","enumerable","configurable","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","parts","split","length","pathMatch","hasChildren","posParams","index","part","segment","startsWith","substring","consumed","slice","LoadedRouterConfig","routes","validateConfig","config","parentPath","i","validateNode","getFullPath","fullPath","Error","component","outlet","redirectTo","children","loadChildren","matcher","charAt","currentRoute","copyConfig","r","map","__assign","shallowEqual","a","b","key","k1","k2","flatten","arr","concat","apply","last$1","forEach","map$$1","callback","prop","andObservables","observables","pipe","mergeAll","every","result","wrapIntoObservable","value","ɵisObservable","ɵisPromise","from","Promise","resolve","of","containsTree","container","containee","exact","equalQueryParams","queryParams","equalSegmentGroups","equalPath","numberOfChildren","c","root","containsQueryParams","containsSegmentGroup","containsSegmentGroupHelper","containeePaths","current","next","UrlTree","fragment","_queryParamMap","DEFAULT_SERIALIZER","serialize","UrlSegmentGroup","parent","k","serializePaths","UrlSegment","parameters","_parameterMap","serializePath","as","bs","mapChildrenIntoArray","fn","res","child","childOutlet","UrlSerializer","DefaultUrlSerializer","parse","p","UrlParser","parseRootSegment","parseQueryParams","parseFragment","tree","serializeSegment","primary","children_1","push","join","serializeQueryParams","strParams","encodeUriQuery","encodeUriFragment","s","encodeURI","encodeUriString","encodeURIComponent","replace","encodeUriSegment","decode","decodeURIComponent","decodeQuery","serializeMatrixParams","SEGMENT_RE","matchSegments","str","match","QUERY_PARAM_RE","QUERY_PARAM_VALUE_RE","remaining","consumeOptional","peekStartsWith","parseChildren","parseQueryParam","parseSegment","capture","parseParens","parseMatrixParams","parseParam","valueMatch","matchQueryParams","matchUrlQueryParamValue","decodedKey","decodedVal","currentVal","allowPrimary","outletName","indexOf","substr","NoMatch","AbsoluteRedirect","urlTree","noMatch","Observable","obs","absoluteRedirect","newTree","namedOutletsRedirect","ApplyRedirects","moduleInjector","configLoader","urlSerializer","allowRedirects","ngModule","NgModuleRef","expandSegmentGroup","rootSegmentGroup","createUrlTree","catchError","e","noMatchError","rootCandidate","_a","expandChildren","expandSegment","waitForMap","obj","waitHead","waitTail","mapped","concatAll","last","__spread","expandSegmentAgainstRoute","first","_","EmptyError","noLeftoversInUrl","paths","getOutlet","undefined","matchSegmentAgainstRoute","expandSegmentAgainstRouteUsingRedirect","expandWildCardWithParamsAgainstRouteUsingRedirect","expandRegularSegmentAgainstRouteUsingRedirect","applyRedirectCommands","lineralizeSegments","mergeMap","newSegments","group","consumedSegments","lastChild","positionalParamSegments","matched","rawSegmentGroup","load","injector","cfg","_loadedConfig","rawSlicedSegments","getChildConfig","routerConfig","childModule","childConfig","slicedSegments","containsEmptyPathRedirectsWithNamedOutlets","some","isEmptyPathRedirect","mergeTrivialChildren","createChildrenForEmptySegments","primarySegmentGroup","e_3","routes_2","__values","routes_2_1","done","e_3_1","return","containsEmptyPathRedirects","addEmptySegmentsToChildrenIfNeeded","e_2","routes_1","routes_1_1","e_2_1","cs","runCanLoadGuard","canLoad","injectionToken","guard","shouldLoad","canLoadFails","navigationCancelingError","message","applyRedirectCreatreUrlTree","newRoot","createSegmentGroup","createQueryParams","redirectToParams","actualParams","sourceName","updatedSegments","createSegments","redirectToSegments","actualSegments","findPosParam","findOrReturn","redirectToUrlSegment","pos","e_1","idx","actualSegments_1","actualSegments_1_1","splice","e_1_1","Tree","_root","t","pathFromRoot","n","findNode","firstChild","siblings","findPath","filter","cc","node","_b","node_1","_c","unshift","TreeNode","nodeChildrenAsMap","RouterState","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","activated","ActivatedRouteSnapshot","RouterStateSnapshot","emptyUrl","BehaviorSubject","emptyParams","emptyData","emptyQueryParams","ActivatedRoute","data","futureSnapshot","_futureSnapshot","_routerState","_paramMap","inheritedParamsDataResolve","paramsInheritanceStrategy","inheritingStartingFrom","parent_1","flattenInherited","reduce","curr","_resolvedData","urlSegment","lastPathIndex","_urlSegment","_lastPathIndex","_resolve","serializeNode","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqualArrays","equalParamsAndUrlSegments","equalSegments","isMatrixParams","command","outlets","segmentPath","oldSegmentGroup","newSegmentGroup","qp","replaceSegment","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","commands","cmdWithOutlet","find","toRoot","Position","processChildren","getPath","updateSegmentGroup","startIndex","updateSegmentGroupChildren","m","prefixedWith","currentCommandIndex","currentPathIndex","pathIndex","commandIndex","compare","slicedCommands","g","createNewSegmentGroup","outlets_2","getOutlets","createNewSegmentChildren","stringify","CanActivate","CanDeactivate","PreActivation","future","forwardEvent","canActivateChecks","canDeactivateChecks","initialize","parentContexts","futureRoot","setupChildRouteGuards","checkGuards","isDeactivating","isActivating","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","resolveData","concatMap","check","runResolve","__","futureNode","currNode","contexts","futurePath","prevChildren","setupRouteGuards","deactivateRouteAndItsChildren","getContext","context","shouldRunGuardsAndResolvers","runGuardsAndResolvers","mode","childName","isActivated","runCanDeactivate","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","canActivate","getToken","canActivateChildGuards","reverse","extractCanActivateChild","d","guards","canActivateChild","resolveNode","resolvedData","key_1","getResolver","resolver","token","closestLoadedConfig","NoMatch$1","Recognizer","rootComponentType","recognize","split$1","processSegmentGroup","freeze","rootNode","routeState","inheritParamsAndData","routeNode","processSegment","checkOutletNameUniqueness","nodes","names","routeWithSameOutletName","sortActivatedRouteSnapshots","sort","localeCompare","config_1","config_1_1","processSegmentAgainstRoute","rawSegment","getData","getSourceSegmentGroup","getPathIndexShift","getResolve","match$1","_sourceSegment","_segmentIndexShift","containsEmptyPathMatchesWithNamedOutlets","emptyPathMatch","getOutlet$1","s_1","createChildrenForEmptyPaths","primarySegment","containsEmptyPathMatches","s_2","addEmptyPathsToChildrenIfNeeded","RouteReuseStrategy","DefaultRouteReuseStrategy","shouldDetach","store","detachedTree","shouldAttach","retrieve","shouldReuseRoute","ROUTES","InjectionToken","RouterConfigLoader","loader","compiler","onLoadStartListener","onLoadEndListener","parentInjector","loadModuleFactory","create","NgModuleFactory","compileModuleAsync","UrlHandlingStrategy","DefaultUrlHandlingStrategy","shouldProcessUrl","extract","merge","newUrlPart","wholeUrl","defaultErrorHandler","defaultRouterHook","Router","rootContexts","location","navigations","navigationId","events","Subject","errorHandler","navigated","lastSuccessfulId","hooks","beforePreactivation","afterPreactivation","urlHandlingStrategy","routeReuseStrategy","onSameUrlNavigation","resetConfig","currentUrlTree","createEmptyUrlTree","rawUrlTree","triggerEvent","routerState","processNavigations","resetRootComponentType","initialNavigation","setUpLocationChangeListener","navigateByUrl","replaceUrl","locationSubscription","subscribe","change","source","setTimeout","scheduleNavigation","serializeUrl","ngOnDestroy","dispose","unsubscribe","navigationExtras","relativeTo","preserveQueryParams","queryParamsHandling","preserveFragment","isDevMode","console","warn","f","q","removeEmptyProps","nav","computeNavigation","cmd","cmdIdx","outlets_1","urlPart","partIndex","startingPosition","findStartingPosition","modifier","createPositionApplyingDoubleDots","ci","dd","extras","skipLocationChange","parseUrl","mergedTree","navigate","validateCommands","isActive","executeScheduledNavigation","promise","catch","rawUrl","lastNavigation","reject","rej","urlTransition","then","runNavigate","precreatedState","resolvePromise","rejectPromise","preActivation","routerState$","appliedUrl","applyRedirects","evt","createRouterState","prevState","createNode","createOrReuseChildren","setFutureSnapshotsOfActivatedRoutes","createActivatedRoute","activateRoutes","storedState","storedUrl","navigationIsSuccessful","isCurrentPathEqualTo","replaceState","go","ActivateRoutes","activate","resetUrlToCurrentUrlTree","isNavigationCancelingError","resetStateAndUrl","ee","futureState","currState","currRoot","deactivateChildRoutes","activateChildRoutes","futureChild","childOutletName","deactivateRoutes","parentContext","detachAndStoreRouteSubtree","deactivateRouteAndOutlet","componentRef","detach","onOutletDeactivated","contexts_1","deactivate","getOrCreateContext","stored","onOutletReAttached","attachRef","attach","advanceActivatedRouteNodeAndItsChildren","parentLoadedConfig","cmpFactoryResolver","componentFactoryResolver","activateWith","RouterLink","tabIndex","renderer","el","setAttribute","nativeElement","set","preserve","onClick","attrBoolValue","decorators","type","Directive","args","selector","ctorParameters","Attribute","Renderer2","ElementRef","propDecorators","Input","routerLink","HostListener","RouterLinkWithHref","locationStrategy","subscription","updateTargetUrlAndHref","ngOnChanges","changes","button","ctrlKey","metaKey","shiftKey","target","href","prepareExternalUrl","LocationStrategy","HostBinding","RouterLinkActive","element","cdr","classes","routerLinkActiveOptions","update","ngAfterContentInit","links","linksWithHrefs","hasActiveLinks","addClass","removeClass","isLinkActive","link","exportAs","ChangeDetectorRef","ContentChildren","descendants","routerLinkActive","OutletContext","ChildrenOutletContexts","Map","onChildOutletCreated","onChildOutletDestroyed","RouterOutlet","changeDetector","_activatedRoute","activateEvents","EventEmitter","deactivateEvents","ngOnInit","instance","cmp","ref","activatedRoute","insert","hostView","destroy","emit","resolveComponentFactory","childContexts","OutletInjector","createComponent","markForCheck","ViewContainerRef","ComponentFactoryResolver","Output","notFoundValue","PreloadingStrategy","PreloadAllModules","preload","NoPreloading","RouterPreloader","moduleLoader","preloadingStrategy","setUpPreloading","processRoutes","preloadConfig","Injectable","NgModuleFactoryLoader","Compiler","Injector","ROUTER_DIRECTIVES","ROUTER_CONFIGURATION","ROUTER_FORROOT_GUARD","ROUTER_PROVIDERS","Location","provide","useClass","useFactory","setupRouter","deps","ApplicationRef","Optional","rootRoute","SystemJsNgModuleLoader","useValue","enableTracing","routerNgProbeToken","NgProbeToken","RouterModule","forRoot","providers","provideRoutes","provideForRootGuard","SkipSelf","provideLocationStrategy","PlatformLocation","Inject","APP_BASE_HREF","useExisting","multi","provideRouterInitializer","forChild","NgModule","declarations","platformLocationStrategy","baseHref","options","useHash","HashLocationStrategy","PathLocationStrategy","ANALYZE_FOR_ENTRY_COMPONENTS","opts","dom_1","ɵgetDOM","logGroup","constructor","log","logGroupEnd","RouterInitializer","initNavigation","resultOfPreactivationDone","appInitializer","LOCATION_INITIALIZED","isLegacyDisabled","isLegacyEnabled","bootstrapListener","bootstrappedComponentRef","preloader","components","componentTypes","complete","getAppInitializer","bind","getBootstrapListener","ROUTER_INITIALIZER","APP_INITIALIZER","APP_BOOTSTRAP_LISTENER","VERSION","Version","ɵangular_packages_router_router_a","ɵangular_packages_router_router_g","ɵangular_packages_router_router_h","ɵangular_packages_router_router_i","ɵangular_packages_router_router_d","ɵangular_packages_router_router_c","ɵangular_packages_router_router_j","ɵangular_packages_router_router_f","ɵangular_packages_router_router_b","ɵangular_packages_router_router_e","ɵangular_packages_router_router_k","ɵangular_packages_router_router_l","ɵROUTER_PROVIDERS","ɵflatten"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.0-rc.4\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('tslib'), require('rxjs'), require('rxjs/operators'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define('@angular/router', ['exports', '@angular/common', '@angular/core', 'tslib', 'rxjs', 'rxjs/operators', '@angular/platform-browser'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.router = {}),global.ng.common,global.ng.core,global.tslib,global.rxjs,global.rxjs.operators,global.ng.platformBrowser));\n}(this, (function (exports,common,core,tslib_1,rxjs,operators,platformBrowser) { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Base for events the Router goes through, as opposed to events tied to a specific\n * Route. `RouterEvent`s will only be fired one time for any given navigation.\n *\n * Example:\n *\n * ```\n * class MyService {\n *   constructor(public router: Router, logger: Logger) {\n *     router.events.filter(e => e instanceof RouterEvent).subscribe(e => {\n *       logger.log(e.id, e.url);\n *     });\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar RouterEvent = /** @class */ (function () {\n    function RouterEvent(/** @docsNotRequired */\n    id, /** @docsNotRequired */\n    url) {\n        this.id = id;\n        this.url = url;\n    }\n    return RouterEvent;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a navigation starts.\n *\n *\n */\nvar NavigationStart = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigationStart, _super);\n    function NavigationStart(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    /** @docsNotRequired */\n    navigationTrigger, /** @docsNotRequired */\n    /** @docsNotRequired */\n    restoredState) {\n        /** @docsNotRequired */\n        if (navigationTrigger === void 0) { navigationTrigger = 'imperative'; }\n        /** @docsNotRequired */\n        if (restoredState === void 0) { restoredState = null; }\n        var _this = _super.call(this, id, url) || this;\n        _this.navigationTrigger = navigationTrigger;\n        _this.restoredState = restoredState;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    NavigationStart.prototype.toString = /** @docsNotRequired */\n    function () { return \"NavigationStart(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation ends successfully.\n *\n *\n */\nvar NavigationEnd = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigationEnd, _super);\n    function NavigationEnd(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    NavigationEnd.prototype.toString = /** @docsNotRequired */\n    function () {\n        return \"NavigationEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"')\";\n    };\n    return NavigationEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation is canceled.\n *\n *\n */\nvar NavigationCancel = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigationCancel, _super);\n    function NavigationCancel(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    reason) {\n        var _this = _super.call(this, id, url) || this;\n        _this.reason = reason;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    NavigationCancel.prototype.toString = /** @docsNotRequired */\n    function () { return \"NavigationCancel(id: \" + this.id + \", url: '\" + this.url + \"')\"; };\n    return NavigationCancel;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when a navigation fails due to an unexpected error.\n *\n *\n */\nvar NavigationError = /** @class */ (function (_super) {\n    tslib_1.__extends(NavigationError, _super);\n    function NavigationError(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    error) {\n        var _this = _super.call(this, id, url) || this;\n        _this.error = error;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    NavigationError.prototype.toString = /** @docsNotRequired */\n    function () {\n        return \"NavigationError(id: \" + this.id + \", url: '\" + this.url + \"', error: \" + this.error + \")\";\n    };\n    return NavigationError;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered when routes are recognized.\n *\n *\n */\nvar RoutesRecognized = /** @class */ (function (_super) {\n    tslib_1.__extends(RoutesRecognized, _super);\n    function RoutesRecognized(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects, /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    RoutesRecognized.prototype.toString = /** @docsNotRequired */\n    function () {\n        return \"RoutesRecognized(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return RoutesRecognized;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckStart = /** @class */ (function (_super) {\n    tslib_1.__extends(GuardsCheckStart, _super);\n    function GuardsCheckStart(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects, /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    GuardsCheckStart.prototype.toString = function () {\n        return \"GuardsCheckStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return GuardsCheckStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Guard phase of routing.\n *\n * @experimental\n */\nvar GuardsCheckEnd = /** @class */ (function (_super) {\n    tslib_1.__extends(GuardsCheckEnd, _super);\n    function GuardsCheckEnd(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects, /** @docsNotRequired */\n    state, /** @docsNotRequired */\n    shouldActivate) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        _this.shouldActivate = shouldActivate;\n        return _this;\n    }\n    GuardsCheckEnd.prototype.toString = function () {\n        return \"GuardsCheckEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \", shouldActivate: \" + this.shouldActivate + \")\";\n    };\n    return GuardsCheckEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the start of the Resolve phase of routing. The timing of this\n * event may change, thus it's experimental. In the current iteration it will run\n * in the \"resolve\" phase whether there's things to resolve or not. In the future this\n * behavior may change to only run when there are things to be resolved.\n *\n * @experimental\n */\nvar ResolveStart = /** @class */ (function (_super) {\n    tslib_1.__extends(ResolveStart, _super);\n    function ResolveStart(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects, /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveStart.prototype.toString = function () {\n        return \"ResolveStart(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveStart;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents the end of the Resolve phase of routing. See note on\n * `ResolveStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ResolveEnd = /** @class */ (function (_super) {\n    tslib_1.__extends(ResolveEnd, _super);\n    function ResolveEnd(/** @docsNotRequired */\n    /** @docsNotRequired */\n    id, /** @docsNotRequired */\n    /** @docsNotRequired */\n    url, /** @docsNotRequired */\n    urlAfterRedirects, /** @docsNotRequired */\n    state) {\n        var _this = _super.call(this, id, url) || this;\n        _this.urlAfterRedirects = urlAfterRedirects;\n        _this.state = state;\n        return _this;\n    }\n    ResolveEnd.prototype.toString = function () {\n        return \"ResolveEnd(id: \" + this.id + \", url: '\" + this.url + \"', urlAfterRedirects: '\" + this.urlAfterRedirects + \"', state: \" + this.state + \")\";\n    };\n    return ResolveEnd;\n}(RouterEvent));\n/**\n * @description\n *\n * Represents an event triggered before lazy loading a route config.\n *\n * @experimental\n */\nvar RouteConfigLoadStart = /** @class */ (function () {\n    function RouteConfigLoadStart(/** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadStart.prototype.toString = function () { return \"RouteConfigLoadStart(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadStart;\n}());\n/**\n * @description\n *\n * Represents an event triggered when a route has been lazy loaded.\n *\n * @experimental\n */\nvar RouteConfigLoadEnd = /** @class */ (function () {\n    function RouteConfigLoadEnd(/** @docsNotRequired */\n    route) {\n        this.route = route;\n    }\n    RouteConfigLoadEnd.prototype.toString = function () { return \"RouteConfigLoadEnd(path: \" + this.route.path + \")\"; };\n    return RouteConfigLoadEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationStart = /** @class */ (function () {\n    function ChildActivationStart(/** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationStart(path: '\" + path + \"')\";\n    };\n    return ChildActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ChildActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ChildActivationEnd = /** @class */ (function () {\n    function ChildActivationEnd(/** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ChildActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ChildActivationEnd(path: '\" + path + \"')\";\n    };\n    return ChildActivationEnd;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationEnd` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationStart = /** @class */ (function () {\n    function ActivationStart(/** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationStart.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationStart(path: '\" + path + \"')\";\n    };\n    return ActivationStart;\n}());\n/**\n * @description\n *\n * Represents the start of end of the Resolve phase of routing. See note on\n * `ActivationStart` for use of this experimental API.\n *\n * @experimental\n */\nvar ActivationEnd = /** @class */ (function () {\n    function ActivationEnd(/** @docsNotRequired */\n    snapshot) {\n        this.snapshot = snapshot;\n    }\n    ActivationEnd.prototype.toString = function () {\n        var path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n        return \"ActivationEnd(path: '\" + path + \"')\";\n    };\n    return ActivationEnd;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Name of the primary outlet.\n *\n *\n */\nvar PRIMARY_OUTLET = 'primary';\nvar ParamsAsMap = /** @class */ (function () {\n    function ParamsAsMap(params) {\n        this.params = params || {};\n    }\n    ParamsAsMap.prototype.has = function (name) { return this.params.hasOwnProperty(name); };\n    ParamsAsMap.prototype.get = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v[0] : v;\n        }\n        return null;\n    };\n    ParamsAsMap.prototype.getAll = function (name) {\n        if (this.has(name)) {\n            var v = this.params[name];\n            return Array.isArray(v) ? v : [v];\n        }\n        return [];\n    };\n    Object.defineProperty(ParamsAsMap.prototype, \"keys\", {\n        get: function () { return Object.keys(this.params); },\n        enumerable: true,\n        configurable: true\n    });\n    return ParamsAsMap;\n}());\n/**\n * Convert a `Params` instance to a `ParamMap`.\n *\n *\n */\nfunction convertToParamMap(params) {\n    return new ParamsAsMap(params);\n}\nvar NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction navigationCancelingError(message) {\n    var error = Error('NavigationCancelingError: ' + message);\n    error[NAVIGATION_CANCELING_ERROR] = true;\n    return error;\n}\nfunction isNavigationCancelingError(error) {\n    return error && error[NAVIGATION_CANCELING_ERROR];\n}\n// Matches the route configuration (`route`) against the actual URL (`segments`).\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n    var parts = route.path.split('/');\n    if (parts.length > segments.length) {\n        // The actual URL is shorter than the config, no match\n        return null;\n    }\n    if (route.pathMatch === 'full' &&\n        (segmentGroup.hasChildren() || parts.length < segments.length)) {\n        // The config is longer than the actual URL but we are looking for a full match, return null\n        return null;\n    }\n    var posParams = {};\n    // Check each config part against the actual URL\n    for (var index = 0; index < parts.length; index++) {\n        var part = parts[index];\n        var segment = segments[index];\n        var isParameter = part.startsWith(':');\n        if (isParameter) {\n            posParams[part.substring(1)] = segment;\n        }\n        else if (part !== segment.path) {\n            // The actual URL part does not match the config, no match\n            return null;\n        }\n    }\n    return { consumed: segments.slice(0, parts.length), posParams: posParams };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LoadedRouterConfig = /** @class */ (function () {\n    function LoadedRouterConfig(routes, module) {\n        this.routes = routes;\n        this.module = module;\n    }\n    return LoadedRouterConfig;\n}());\nfunction validateConfig(config, parentPath) {\n    if (parentPath === void 0) { parentPath = ''; }\n    // forEach doesn't iterate undefined values\n    for (var i = 0; i < config.length; i++) {\n        var route = config[i];\n        var fullPath = getFullPath(parentPath, route);\n        validateNode(route, fullPath);\n    }\n}\nfunction validateNode(route, fullPath) {\n    if (!route) {\n        throw new Error(\"\\n      Invalid configuration of route '\" + fullPath + \"': Encountered undefined route.\\n      The reason might be an extra comma.\\n\\n      Example:\\n      const routes: Routes = [\\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\\n        { path: 'detail/:id', component: HeroDetailComponent }\\n      ];\\n    \");\n    }\n    if (Array.isArray(route)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': Array cannot be specified\");\n    }\n    if (!route.component && (route.outlet && route.outlet !== PRIMARY_OUTLET)) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': a componentless route cannot have a named outlet set\");\n    }\n    if (route.redirectTo && route.children) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and children cannot be used together\");\n    }\n    if (route.redirectTo && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and loadChildren cannot be used together\");\n    }\n    if (route.children && route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': children and loadChildren cannot be used together\");\n    }\n    if (route.redirectTo && route.component) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': redirectTo and component cannot be used together\");\n    }\n    if (route.path && route.matcher) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path and matcher cannot be used together\");\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.children && !route.loadChildren) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"'. One of the following must be provided: component, redirectTo, children or loadChildren\");\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': routes must have either a path or a matcher specified\");\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': path cannot start with a slash\");\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n        var exp = \"The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.\";\n        throw new Error(\"Invalid configuration of route '{path: \\\"\" + fullPath + \"\\\", redirectTo: \\\"\" + route.redirectTo + \"\\\"}': please provide 'pathMatch'. \" + exp);\n    }\n    if (route.pathMatch !== void 0 && route.pathMatch !== 'full' && route.pathMatch !== 'prefix') {\n        throw new Error(\"Invalid configuration of route '\" + fullPath + \"': pathMatch can only be set to 'prefix' or 'full'\");\n    }\n    if (route.children) {\n        validateConfig(route.children, fullPath);\n    }\n}\nfunction getFullPath(parentPath, currentRoute) {\n    if (!currentRoute) {\n        return parentPath;\n    }\n    if (!parentPath && !currentRoute.path) {\n        return '';\n    }\n    else if (parentPath && !currentRoute.path) {\n        return parentPath + \"/\";\n    }\n    else if (!parentPath && currentRoute.path) {\n        return currentRoute.path;\n    }\n    else {\n        return parentPath + \"/\" + currentRoute.path;\n    }\n}\nfunction copyConfig(r) {\n    var children = r.children && r.children.map(copyConfig);\n    return children ? tslib_1.__assign({}, r, { children: children }) : tslib_1.__assign({}, r);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction shallowEqualArrays(a, b) {\n    if (a.length !== b.length)\n        return false;\n    for (var i = 0; i < a.length; ++i) {\n        if (!shallowEqual(a[i], b[i]))\n            return false;\n    }\n    return true;\n}\nfunction shallowEqual(a, b) {\n    var k1 = Object.keys(a);\n    var k2 = Object.keys(b);\n    if (k1.length != k2.length) {\n        return false;\n    }\n    var key;\n    for (var i = 0; i < k1.length; i++) {\n        key = k1[i];\n        if (a[key] !== b[key]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Flattens single-level nested arrays.\n */\nfunction flatten(arr) {\n    return Array.prototype.concat.apply([], arr);\n}\n/**\n * Return the last element of an array.\n */\nfunction last$1(a) {\n    return a.length > 0 ? a[a.length - 1] : null;\n}\n/**\n * Verifys all booleans in an array are `true`.\n */\n\nfunction forEach(map$$1, callback) {\n    for (var prop in map$$1) {\n        if (map$$1.hasOwnProperty(prop)) {\n            callback(map$$1[prop], prop);\n        }\n    }\n}\nfunction waitForMap(obj, fn) {\n    if (Object.keys(obj).length === 0) {\n        return rxjs.of({});\n    }\n    var waitHead = [];\n    var waitTail = [];\n    var res = {};\n    forEach(obj, function (a, k) {\n        var mapped = fn(k, a).pipe(operators.map(function (r) { return res[k] = r; }));\n        if (k === PRIMARY_OUTLET) {\n            waitHead.push(mapped);\n        }\n        else {\n            waitTail.push(mapped);\n        }\n    });\n    // Closure compiler has problem with using spread operator here. So just using Array.concat.\n    return rxjs.of.apply(null, waitHead.concat(waitTail)).pipe(operators.concatAll(), operators.last(), operators.map(function () { return res; }));\n}\n/**\n * ANDs Observables by merging all input observables, reducing to an Observable verifying all\n * input Observables return `true`.\n */\nfunction andObservables(observables) {\n    return observables.pipe(operators.mergeAll(), operators.every(function (result) { return result === true; }));\n}\nfunction wrapIntoObservable(value) {\n    if (core.ɵisObservable(value)) {\n        return value;\n    }\n    if (core.ɵisPromise(value)) {\n        // Use `Promise.resolve()` to wrap promise-like instances.\n        // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n        // change detection.\n        return rxjs.from(Promise.resolve(value));\n    }\n    return rxjs.of(value);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createEmptyUrlTree() {\n    return new UrlTree(new UrlSegmentGroup([], {}), {}, null);\n}\nfunction containsTree(container, containee, exact) {\n    if (exact) {\n        return equalQueryParams(container.queryParams, containee.queryParams) &&\n            equalSegmentGroups(container.root, containee.root);\n    }\n    return containsQueryParams(container.queryParams, containee.queryParams) &&\n        containsSegmentGroup(container.root, containee.root);\n}\nfunction equalQueryParams(container, containee) {\n    return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee) {\n    if (!equalPath(container.segments, containee.segments))\n        return false;\n    if (container.numberOfChildren !== containee.numberOfChildren)\n        return false;\n    for (var c in containee.children) {\n        if (!container.children[c])\n            return false;\n        if (!equalSegmentGroups(container.children[c], containee.children[c]))\n            return false;\n    }\n    return true;\n}\nfunction containsQueryParams(container, containee) {\n    return Object.keys(containee).length <= Object.keys(container).length &&\n        Object.keys(containee).every(function (key) { return containee[key] === container[key]; });\n}\nfunction containsSegmentGroup(container, containee) {\n    return containsSegmentGroupHelper(container, containee, containee.segments);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths) {\n    if (container.segments.length > containeePaths.length) {\n        var current = container.segments.slice(0, containeePaths.length);\n        if (!equalPath(current, containeePaths))\n            return false;\n        if (containee.hasChildren())\n            return false;\n        return true;\n    }\n    else if (container.segments.length === containeePaths.length) {\n        if (!equalPath(container.segments, containeePaths))\n            return false;\n        for (var c in containee.children) {\n            if (!container.children[c])\n                return false;\n            if (!containsSegmentGroup(container.children[c], containee.children[c]))\n                return false;\n        }\n        return true;\n    }\n    else {\n        var current = containeePaths.slice(0, container.segments.length);\n        var next = containeePaths.slice(container.segments.length);\n        if (!equalPath(container.segments, current))\n            return false;\n        if (!container.children[PRIMARY_OUTLET])\n            return false;\n        return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next);\n    }\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlTree = /** @class */ (function () {\n    /** @internal */\n    function UrlTree(/** The root segment group of the URL tree */\n    root, /** The query params of the URL */\n    queryParams, /** The fragment of the URL */\n    fragment) {\n        this.root = root;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n    }\n    Object.defineProperty(UrlTree.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    UrlTree.prototype.toString = /** @docsNotRequired */\n    function () { return DEFAULT_SERIALIZER.serialize(this); };\n    return UrlTree;\n}());\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n *\n */\nvar UrlSegmentGroup = /** @class */ (function () {\n    function UrlSegmentGroup(/** The URL segments of this group. See `UrlSegment` for more information */\n    segments, /** The list of children of this group */\n    children) {\n        var _this = this;\n        this.segments = segments;\n        this.children = children;\n        /** The parent node in the url tree */\n        this.parent = null;\n        forEach(children, function (v, k) { return v.parent = _this; });\n    }\n    /** Whether the segment has child segments */\n    /** Whether the segment has child segments */\n    UrlSegmentGroup.prototype.hasChildren = /** Whether the segment has child segments */\n    function () { return this.numberOfChildren > 0; };\n    Object.defineProperty(UrlSegmentGroup.prototype, \"numberOfChildren\", {\n        /** Number of child segments */\n        get: /** Number of child segments */\n        function () { return Object.keys(this.children).length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    UrlSegmentGroup.prototype.toString = /** @docsNotRequired */\n    function () { return serializePaths(this); };\n    return UrlSegmentGroup;\n}());\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * ## Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n *\n */\nvar UrlSegment = /** @class */ (function () {\n    function UrlSegment(/** The path part of a URL segment */\n    path, /** The matrix parameters associated with a segment */\n    parameters) {\n        this.path = path;\n        this.parameters = parameters;\n    }\n    Object.defineProperty(UrlSegment.prototype, \"parameterMap\", {\n        get: function () {\n            if (!this._parameterMap) {\n                this._parameterMap = convertToParamMap(this.parameters);\n            }\n            return this._parameterMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    UrlSegment.prototype.toString = /** @docsNotRequired */\n    function () { return serializePath(this); };\n    return UrlSegment;\n}());\nfunction equalSegments(as, bs) {\n    return equalPath(as, bs) && as.every(function (a, i) { return shallowEqual(a.parameters, bs[i].parameters); });\n}\nfunction equalPath(as, bs) {\n    if (as.length !== bs.length)\n        return false;\n    return as.every(function (a, i) { return a.path === bs[i].path; });\n}\nfunction mapChildrenIntoArray(segment, fn) {\n    var res = [];\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet === PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    forEach(segment.children, function (child, childOutlet) {\n        if (childOutlet !== PRIMARY_OUTLET) {\n            res = res.concat(fn(child, childOutlet));\n        }\n    });\n    return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n *\n */\nvar UrlSerializer = /** @class */ (function () {\n    function UrlSerializer() {\n    }\n    return UrlSerializer;\n}());\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n *\n */\nvar DefaultUrlSerializer = /** @class */ (function () {\n    function DefaultUrlSerializer() {\n    }\n    /** Parses a url into a `UrlTree` */\n    /** Parses a url into a `UrlTree` */\n    DefaultUrlSerializer.prototype.parse = /** Parses a url into a `UrlTree` */\n    function (url) {\n        var p = new UrlParser(url);\n        return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n    };\n    /** Converts a `UrlTree` into a url */\n    /** Converts a `UrlTree` into a url */\n    DefaultUrlSerializer.prototype.serialize = /** Converts a `UrlTree` into a url */\n    function (tree) {\n        var segment = \"/\" + serializeSegment(tree.root, true);\n        var query = serializeQueryParams(tree.queryParams);\n        var fragment = typeof tree.fragment === \"string\" ? \"#\" + encodeUriFragment((tree.fragment)) : '';\n        return \"\" + segment + query + fragment;\n    };\n    return DefaultUrlSerializer;\n}());\nvar DEFAULT_SERIALIZER = new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n    return segment.segments.map(function (p) { return serializePath(p); }).join('/');\n}\nfunction serializeSegment(segment, root) {\n    if (!segment.hasChildren()) {\n        return serializePaths(segment);\n    }\n    if (root) {\n        var primary = segment.children[PRIMARY_OUTLET] ?\n            serializeSegment(segment.children[PRIMARY_OUTLET], false) :\n            '';\n        var children_1 = [];\n        forEach(segment.children, function (v, k) {\n            if (k !== PRIMARY_OUTLET) {\n                children_1.push(k + \":\" + serializeSegment(v, false));\n            }\n        });\n        return children_1.length > 0 ? primary + \"(\" + children_1.join('//') + \")\" : primary;\n    }\n    else {\n        var children = mapChildrenIntoArray(segment, function (v, k) {\n            if (k === PRIMARY_OUTLET) {\n                return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n            }\n            return [k + \":\" + serializeSegment(v, false)];\n        });\n        return serializePaths(segment) + \"/(\" + children.join('//') + \")\";\n    }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n    return encodeURIComponent(s)\n        .replace(/%40/g, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/g, '$')\n        .replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n    return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n    return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n    return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n    return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n    return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n    return \"\" + encodeUriSegment(path.path) + serializeMatrixParams(path.parameters);\n}\nfunction serializeMatrixParams(params) {\n    return Object.keys(params)\n        .map(function (key) { return \";\" + encodeUriSegment(key) + \"=\" + encodeUriSegment(params[key]); })\n        .join('');\n}\nfunction serializeQueryParams(params) {\n    var strParams = Object.keys(params).map(function (name) {\n        var value = params[name];\n        return Array.isArray(value) ?\n            value.map(function (v) { return encodeUriQuery(name) + \"=\" + encodeUriQuery(v); }).join('&') :\n            encodeUriQuery(name) + \"=\" + encodeUriQuery(value);\n    });\n    return strParams.length ? \"?\" + strParams.join(\"&\") : '';\n}\nvar SEGMENT_RE = /^[^\\/()?;=&#]+/;\nfunction matchSegments(str) {\n    var match = str.match(SEGMENT_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n    var match = str.match(QUERY_PARAM_RE);\n    return match ? match[0] : '';\n}\nvar QUERY_PARAM_VALUE_RE = /^[^?&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n    var match = str.match(QUERY_PARAM_VALUE_RE);\n    return match ? match[0] : '';\n}\nvar UrlParser = /** @class */ (function () {\n    function UrlParser(url) {\n        this.url = url;\n        this.remaining = url;\n    }\n    UrlParser.prototype.parseRootSegment = function () {\n        this.consumeOptional('/');\n        if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n            return new UrlSegmentGroup([], {});\n        }\n        // The root segment group never has segments\n        return new UrlSegmentGroup([], this.parseChildren());\n    };\n    UrlParser.prototype.parseQueryParams = function () {\n        var params = {};\n        if (this.consumeOptional('?')) {\n            do {\n                this.parseQueryParam(params);\n            } while (this.consumeOptional('&'));\n        }\n        return params;\n    };\n    UrlParser.prototype.parseFragment = function () {\n        return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n    };\n    UrlParser.prototype.parseChildren = function () {\n        if (this.remaining === '') {\n            return {};\n        }\n        this.consumeOptional('/');\n        var segments = [];\n        if (!this.peekStartsWith('(')) {\n            segments.push(this.parseSegment());\n        }\n        while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n            this.capture('/');\n            segments.push(this.parseSegment());\n        }\n        var children = {};\n        if (this.peekStartsWith('/(')) {\n            this.capture('/');\n            children = this.parseParens(true);\n        }\n        var res = {};\n        if (this.peekStartsWith('(')) {\n            res = this.parseParens(false);\n        }\n        if (segments.length > 0 || Object.keys(children).length > 0) {\n            res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n        }\n        return res;\n    };\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    UrlParser.prototype.parseSegment = \n    // parse a segment with its matrix parameters\n    // ie `name;k1=v1;k2`\n    function () {\n        var path = matchSegments(this.remaining);\n        if (path === '' && this.peekStartsWith(';')) {\n            throw new Error(\"Empty path url segment cannot have parameters: '\" + this.remaining + \"'.\");\n        }\n        this.capture(path);\n        return new UrlSegment(decode(path), this.parseMatrixParams());\n    };\n    UrlParser.prototype.parseMatrixParams = function () {\n        var params = {};\n        while (this.consumeOptional(';')) {\n            this.parseParam(params);\n        }\n        return params;\n    };\n    UrlParser.prototype.parseParam = function (params) {\n        var key = matchSegments(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchSegments(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        params[decode(key)] = decode(value);\n    };\n    // Parse a single query parameter `name[=value]`\n    // Parse a single query parameter `name[=value]`\n    UrlParser.prototype.parseQueryParam = \n    // Parse a single query parameter `name[=value]`\n    function (params) {\n        var key = matchQueryParams(this.remaining);\n        if (!key) {\n            return;\n        }\n        this.capture(key);\n        var value = '';\n        if (this.consumeOptional('=')) {\n            var valueMatch = matchUrlQueryParamValue(this.remaining);\n            if (valueMatch) {\n                value = valueMatch;\n                this.capture(value);\n            }\n        }\n        var decodedKey = decodeQuery(key);\n        var decodedVal = decodeQuery(value);\n        if (params.hasOwnProperty(decodedKey)) {\n            // Append to existing values\n            var currentVal = params[decodedKey];\n            if (!Array.isArray(currentVal)) {\n                currentVal = [currentVal];\n                params[decodedKey] = currentVal;\n            }\n            currentVal.push(decodedVal);\n        }\n        else {\n            // Create a new value\n            params[decodedKey] = decodedVal;\n        }\n    };\n    // parse `(a/b//outlet_name:c/d)`\n    // parse `(a/b//outlet_name:c/d)`\n    UrlParser.prototype.parseParens = \n    // parse `(a/b//outlet_name:c/d)`\n    function (allowPrimary) {\n        var segments = {};\n        this.capture('(');\n        while (!this.consumeOptional(')') && this.remaining.length > 0) {\n            var path = matchSegments(this.remaining);\n            var next = this.remaining[path.length];\n            // if is is not one of these characters, then the segment was unescaped\n            // or the group was not closed\n            if (next !== '/' && next !== ')' && next !== ';') {\n                throw new Error(\"Cannot parse url '\" + this.url + \"'\");\n            }\n            var outletName = (undefined);\n            if (path.indexOf(':') > -1) {\n                outletName = path.substr(0, path.indexOf(':'));\n                this.capture(outletName);\n                this.capture(':');\n            }\n            else if (allowPrimary) {\n                outletName = PRIMARY_OUTLET;\n            }\n            var children = this.parseChildren();\n            segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] :\n                new UrlSegmentGroup([], children);\n            this.consumeOptional('//');\n        }\n        return segments;\n    };\n    UrlParser.prototype.peekStartsWith = function (str) { return this.remaining.startsWith(str); };\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    // Consumes the prefix when it is present and returns whether it has been consumed\n    UrlParser.prototype.consumeOptional = \n    // Consumes the prefix when it is present and returns whether it has been consumed\n    function (str) {\n        if (this.peekStartsWith(str)) {\n            this.remaining = this.remaining.substring(str.length);\n            return true;\n        }\n        return false;\n    };\n    UrlParser.prototype.capture = function (str) {\n        if (!this.consumeOptional(str)) {\n            throw new Error(\"Expected \\\"\" + str + \"\\\".\");\n        }\n    };\n    return UrlParser;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch = /** @class */ (function () {\n    function NoMatch(segmentGroup) {\n        this.segmentGroup = segmentGroup || null;\n    }\n    return NoMatch;\n}());\nvar AbsoluteRedirect = /** @class */ (function () {\n    function AbsoluteRedirect(urlTree) {\n        this.urlTree = urlTree;\n    }\n    return AbsoluteRedirect;\n}());\nfunction noMatch(segmentGroup) {\n    return new rxjs.Observable(function (obs) { return obs.error(new NoMatch(segmentGroup)); });\n}\nfunction absoluteRedirect(newTree) {\n    return new rxjs.Observable(function (obs) { return obs.error(new AbsoluteRedirect(newTree)); });\n}\nfunction namedOutletsRedirect(redirectTo) {\n    return new rxjs.Observable(function (obs) {\n        return obs.error(new Error(\"Only absolute redirects can have named outlets. redirectTo: '\" + redirectTo + \"'\"));\n    });\n}\nfunction canLoadFails(route) {\n    return new rxjs.Observable(function (obs) {\n        return obs.error(navigationCancelingError(\"Cannot load children because the guard of the route \\\"path: '\" + route.path + \"'\\\" returned false\"));\n    });\n}\n/**\n * Returns the `UrlTree` with the redirection applied.\n *\n * Lazy modules are loaded along the way.\n */\nfunction applyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n    return new ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config).apply();\n}\nvar ApplyRedirects = /** @class */ (function () {\n    function ApplyRedirects(moduleInjector, configLoader, urlSerializer, urlTree, config) {\n        this.configLoader = configLoader;\n        this.urlSerializer = urlSerializer;\n        this.urlTree = urlTree;\n        this.config = config;\n        this.allowRedirects = true;\n        this.ngModule = moduleInjector.get(core.NgModuleRef);\n    }\n    ApplyRedirects.prototype.apply = function () {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, this.urlTree.root, PRIMARY_OUTLET);\n        var urlTrees$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, _this.urlTree.queryParams, (_this.urlTree.fragment));\n        }));\n        return urlTrees$.pipe(operators.catchError(function (e) {\n            if (e instanceof AbsoluteRedirect) {\n                // after an absolute redirect we do not apply any more redirects!\n                // after an absolute redirect we do not apply any more redirects!\n                _this.allowRedirects = false;\n                // we need to run matching, so we can fetch all lazy-loaded modules\n                return _this.match(e.urlTree);\n            }\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.match = function (tree) {\n        var _this = this;\n        var expanded$ = this.expandSegmentGroup(this.ngModule, this.config, tree.root, PRIMARY_OUTLET);\n        var mapped$ = expanded$.pipe(operators.map(function (rootSegmentGroup) {\n            return _this.createUrlTree(rootSegmentGroup, tree.queryParams, (tree.fragment));\n        }));\n        return mapped$.pipe(operators.catchError(function (e) {\n            if (e instanceof NoMatch) {\n                throw _this.noMatchError(e);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noMatchError = function (e) {\n        return new Error(\"Cannot match any routes. URL Segment: '\" + e.segmentGroup + \"'\");\n    };\n    ApplyRedirects.prototype.createUrlTree = function (rootCandidate, queryParams, fragment) {\n        var root = rootCandidate.segments.length > 0 ?\n            new UrlSegmentGroup([], (_a = {}, _a[PRIMARY_OUTLET] = rootCandidate, _a)) :\n            rootCandidate;\n        return new UrlTree(root, queryParams, fragment);\n        var _a;\n    };\n    ApplyRedirects.prototype.expandSegmentGroup = function (ngModule, routes, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.expandChildren(ngModule, routes, segmentGroup)\n                .pipe(operators.map(function (children) { return new UrlSegmentGroup([], children); }));\n        }\n        return this.expandSegment(ngModule, segmentGroup, routes, segmentGroup.segments, outlet, true);\n    };\n    // Recursively expand segment groups for all the child outlets\n    // Recursively expand segment groups for all the child outlets\n    ApplyRedirects.prototype.expandChildren = \n    // Recursively expand segment groups for all the child outlets\n    function (ngModule, routes, segmentGroup) {\n        var _this = this;\n        return waitForMap(segmentGroup.children, function (childOutlet, child) { return _this.expandSegmentGroup(ngModule, routes, child, childOutlet); });\n    };\n    ApplyRedirects.prototype.expandSegment = function (ngModule, segmentGroup, routes, segments, outlet, allowRedirects) {\n        var _this = this;\n        return rxjs.of.apply(void 0, tslib_1.__spread(routes)).pipe(operators.map(function (r) {\n            var expanded$ = _this.expandSegmentAgainstRoute(ngModule, segmentGroup, routes, r, segments, outlet, allowRedirects);\n            return expanded$.pipe(operators.catchError(function (e) {\n                if (e instanceof NoMatch) {\n                    // TODO(i): this return type doesn't match the declared Observable<UrlSegmentGroup> -\n                    // talk to Jason\n                    return rxjs.of(null);\n                }\n                throw e;\n            }));\n        }), operators.concatAll(), operators.first(function (s) { return !!s; }), operators.catchError(function (e, _) {\n            if (e instanceof rxjs.EmptyError || e.name === 'EmptyError') {\n                if (_this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n                    return rxjs.of(new UrlSegmentGroup([], {}));\n                }\n                throw new NoMatch(segmentGroup);\n            }\n            throw e;\n        }));\n    };\n    ApplyRedirects.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRoute = function (ngModule, segmentGroup, routes, route, paths, outlet, allowRedirects) {\n        if (getOutlet(route) !== outlet) {\n            return noMatch(segmentGroup);\n        }\n        if (route.redirectTo === undefined) {\n            return this.matchSegmentAgainstRoute(ngModule, segmentGroup, route, paths);\n        }\n        if (allowRedirects && this.allowRedirects) {\n            return this.expandSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, paths, outlet);\n        }\n        return noMatch(segmentGroup);\n    };\n    ApplyRedirects.prototype.expandSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        if (route.path === '**') {\n            return this.expandWildCardWithParamsAgainstRouteUsingRedirect(ngModule, routes, route, outlet);\n        }\n        return this.expandRegularSegmentAgainstRouteUsingRedirect(ngModule, segmentGroup, routes, route, segments, outlet);\n    };\n    ApplyRedirects.prototype.expandWildCardWithParamsAgainstRouteUsingRedirect = function (ngModule, routes, route, outlet) {\n        var _this = this;\n        var newTree = this.applyRedirectCommands([], (route.redirectTo), {});\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            var group = new UrlSegmentGroup(newSegments, {});\n            return _this.expandSegment(ngModule, group, routes, newSegments, outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.expandRegularSegmentAgainstRouteUsingRedirect = function (ngModule, segmentGroup, routes, route, segments, outlet) {\n        var _this = this;\n        var _a = match(segmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild, positionalParamSegments = _a.positionalParamSegments;\n        if (!matched)\n            return noMatch(segmentGroup);\n        var newTree = this.applyRedirectCommands(consumedSegments, (route.redirectTo), positionalParamSegments);\n        if (route.redirectTo.startsWith('/')) {\n            return absoluteRedirect(newTree);\n        }\n        return this.lineralizeSegments(route, newTree).pipe(operators.mergeMap(function (newSegments) {\n            return _this.expandSegment(ngModule, segmentGroup, routes, newSegments.concat(segments.slice(lastChild)), outlet, false);\n        }));\n    };\n    ApplyRedirects.prototype.matchSegmentAgainstRoute = function (ngModule, rawSegmentGroup, route, segments) {\n        var _this = this;\n        if (route.path === '**') {\n            if (route.loadChildren) {\n                return this.configLoader.load(ngModule.injector, route)\n                    .pipe(operators.map(function (cfg) {\n                    route._loadedConfig = cfg;\n                    return new UrlSegmentGroup(segments, {});\n                }));\n            }\n            return rxjs.of(new UrlSegmentGroup(segments, {}));\n        }\n        var _a = match(rawSegmentGroup, route, segments), matched = _a.matched, consumedSegments = _a.consumedSegments, lastChild = _a.lastChild;\n        if (!matched)\n            return noMatch(rawSegmentGroup);\n        var rawSlicedSegments = segments.slice(lastChild);\n        var childConfig$ = this.getChildConfig(ngModule, route);\n        return childConfig$.pipe(operators.mergeMap(function (routerConfig) {\n            var childModule = routerConfig.module;\n            var childConfig = routerConfig.routes;\n            var _a = split(rawSegmentGroup, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n            if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n                var expanded$_1 = _this.expandChildren(childModule, childConfig, segmentGroup);\n                return expanded$_1.pipe(operators.map(function (children) { return new UrlSegmentGroup(consumedSegments, children); }));\n            }\n            if (childConfig.length === 0 && slicedSegments.length === 0) {\n                return rxjs.of(new UrlSegmentGroup(consumedSegments, {}));\n            }\n            var expanded$ = _this.expandSegment(childModule, segmentGroup, childConfig, slicedSegments, PRIMARY_OUTLET, true);\n            return expanded$.pipe(operators.map(function (cs) {\n                return new UrlSegmentGroup(consumedSegments.concat(cs.segments), cs.children);\n            }));\n        }));\n    };\n    ApplyRedirects.prototype.getChildConfig = function (ngModule, route) {\n        var _this = this;\n        if (route.children) {\n            // The children belong to the same module\n            return rxjs.of(new LoadedRouterConfig(route.children, ngModule));\n        }\n        if (route.loadChildren) {\n            // lazy children belong to the loaded module\n            if (route._loadedConfig !== undefined) {\n                return rxjs.of(route._loadedConfig);\n            }\n            return runCanLoadGuard(ngModule.injector, route).pipe(operators.mergeMap(function (shouldLoad) {\n                if (shouldLoad) {\n                    return _this.configLoader.load(ngModule.injector, route)\n                        .pipe(operators.map(function (cfg) {\n                        route._loadedConfig = cfg;\n                        return cfg;\n                    }));\n                }\n                return canLoadFails(route);\n            }));\n        }\n        return rxjs.of(new LoadedRouterConfig([], ngModule));\n    };\n    ApplyRedirects.prototype.lineralizeSegments = function (route, urlTree) {\n        var res = [];\n        var c = urlTree.root;\n        while (true) {\n            res = res.concat(c.segments);\n            if (c.numberOfChildren === 0) {\n                return rxjs.of(res);\n            }\n            if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n                return namedOutletsRedirect((route.redirectTo));\n            }\n            c = c.children[PRIMARY_OUTLET];\n        }\n    };\n    ApplyRedirects.prototype.applyRedirectCommands = function (segments, redirectTo, posParams) {\n        return this.applyRedirectCreatreUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    };\n    ApplyRedirects.prototype.applyRedirectCreatreUrlTree = function (redirectTo, urlTree, segments, posParams) {\n        var newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n        return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n    };\n    ApplyRedirects.prototype.createQueryParams = function (redirectToParams, actualParams) {\n        var res = {};\n        forEach(redirectToParams, function (v, k) {\n            var copySourceValue = typeof v === 'string' && v.startsWith(':');\n            if (copySourceValue) {\n                var sourceName = v.substring(1);\n                res[k] = actualParams[sourceName];\n            }\n            else {\n                res[k] = v;\n            }\n        });\n        return res;\n    };\n    ApplyRedirects.prototype.createSegmentGroup = function (redirectTo, group, segments, posParams) {\n        var _this = this;\n        var updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n        var children = {};\n        forEach(group.children, function (child, name) {\n            children[name] = _this.createSegmentGroup(redirectTo, child, segments, posParams);\n        });\n        return new UrlSegmentGroup(updatedSegments, children);\n    };\n    ApplyRedirects.prototype.createSegments = function (redirectTo, redirectToSegments, actualSegments, posParams) {\n        var _this = this;\n        return redirectToSegments.map(function (s) {\n            return s.path.startsWith(':') ? _this.findPosParam(redirectTo, s, posParams) :\n                _this.findOrReturn(s, actualSegments);\n        });\n    };\n    ApplyRedirects.prototype.findPosParam = function (redirectTo, redirectToUrlSegment, posParams) {\n        var pos = posParams[redirectToUrlSegment.path.substring(1)];\n        if (!pos)\n            throw new Error(\"Cannot redirect to '\" + redirectTo + \"'. Cannot find '\" + redirectToUrlSegment.path + \"'.\");\n        return pos;\n    };\n    ApplyRedirects.prototype.findOrReturn = function (redirectToUrlSegment, actualSegments) {\n        var idx = 0;\n        try {\n            for (var actualSegments_1 = tslib_1.__values(actualSegments), actualSegments_1_1 = actualSegments_1.next(); !actualSegments_1_1.done; actualSegments_1_1 = actualSegments_1.next()) {\n                var s = actualSegments_1_1.value;\n                if (s.path === redirectToUrlSegment.path) {\n                    actualSegments.splice(idx);\n                    return s;\n                }\n                idx++;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (actualSegments_1_1 && !actualSegments_1_1.done && (_a = actualSegments_1.return)) _a.call(actualSegments_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return redirectToUrlSegment;\n        var e_1, _a;\n    };\n    return ApplyRedirects;\n}());\nfunction runCanLoadGuard(moduleInjector, route) {\n    var canLoad = route.canLoad;\n    if (!canLoad || canLoad.length === 0)\n        return rxjs.of(true);\n    var obs = rxjs.from(canLoad).pipe(operators.map(function (injectionToken) {\n        var guard = moduleInjector.get(injectionToken);\n        return wrapIntoObservable(guard.canLoad ? guard.canLoad(route) : guard(route));\n    }));\n    return andObservables(obs);\n}\nfunction match(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if ((route.pathMatch === 'full') && (segmentGroup.hasChildren() || segments.length > 0)) {\n            return { matched: false, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n        }\n        return { matched: true, consumedSegments: [], lastChild: 0, positionalParamSegments: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res) {\n        return {\n            matched: false,\n            consumedSegments: [],\n            lastChild: 0,\n            positionalParamSegments: {},\n        };\n    }\n    return {\n        matched: true,\n        consumedSegments: (res.consumed),\n        lastChild: (res.consumed.length),\n        positionalParamSegments: (res.posParams),\n    };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptySegments(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathRedirects(segmentGroup, slicedSegments, config)) {\n        var s = new UrlSegmentGroup(segmentGroup.segments, addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        return { segmentGroup: mergeTrivialChildren(s), slicedSegments: slicedSegments };\n    }\n    return { segmentGroup: segmentGroup, slicedSegments: slicedSegments };\n}\nfunction mergeTrivialChildren(s) {\n    if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n        var c = s.children[PRIMARY_OUTLET];\n        return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n    }\n    return s;\n}\nfunction addEmptySegmentsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = tslib_1.__values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (isEmptyPathRedirect(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return tslib_1.__assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptySegments(routes, primarySegmentGroup) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegmentGroup;\n    try {\n        for (var routes_2 = tslib_1.__values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n                res[getOutlet(r)] = new UrlSegmentGroup([], {});\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathRedirectsWithNamedOutlets(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r) && getOutlet(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathRedirects(segmentGroup, segments, routes) {\n    return routes.some(function (r) { return isEmptyPathRedirect(segmentGroup, segments, r); });\n}\nfunction isEmptyPathRedirect(segmentGroup, segments, r) {\n    if ((segmentGroup.hasChildren() || segments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo !== undefined;\n}\nfunction getOutlet(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Tree = /** @class */ (function () {\n    function Tree(root) {\n        this._root = root;\n    }\n    Object.defineProperty(Tree.prototype, \"root\", {\n        get: function () { return this._root.value; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    Tree.prototype.parent = /**\n       * @internal\n       */\n    function (t) {\n        var p = this.pathFromRoot(t);\n        return p.length > 1 ? p[p.length - 2] : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    Tree.prototype.children = /**\n       * @internal\n       */\n    function (t) {\n        var n = findNode(t, this._root);\n        return n ? n.children.map(function (t) { return t.value; }) : [];\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    Tree.prototype.firstChild = /**\n       * @internal\n       */\n    function (t) {\n        var n = findNode(t, this._root);\n        return n && n.children.length > 0 ? n.children[0].value : null;\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    Tree.prototype.siblings = /**\n       * @internal\n       */\n    function (t) {\n        var p = findPath(t, this._root);\n        if (p.length < 2)\n            return [];\n        var c = p[p.length - 2].children.map(function (c) { return c.value; });\n        return c.filter(function (cc) { return cc !== t; });\n    };\n    /**\n     * @internal\n     */\n    /**\n       * @internal\n       */\n    Tree.prototype.pathFromRoot = /**\n       * @internal\n       */\n    function (t) { return findPath(t, this._root).map(function (s) { return s.value; }); };\n    return Tree;\n}());\n// DFS for the node matching the value\nfunction findNode(value, node) {\n    if (value === node.value)\n        return node;\n    try {\n        for (var _a = tslib_1.__values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var node_1 = findNode(value, child);\n            if (node_1)\n                return node_1;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return null;\n    var e_1, _c;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n    if (value === node.value)\n        return [node];\n    try {\n        for (var _a = tslib_1.__values(node.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var child = _b.value;\n            var path = findPath(value, child);\n            if (path.length) {\n                path.unshift(node);\n                return path;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return [];\n    var e_2, _c;\n}\nvar TreeNode = /** @class */ (function () {\n    function TreeNode(value, children) {\n        this.value = value;\n        this.children = children;\n    }\n    TreeNode.prototype.toString = function () { return \"TreeNode(\" + this.value + \")\"; };\n    return TreeNode;\n}());\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n    var map$$1 = {};\n    if (node) {\n        node.children.forEach(function (child) { return map$$1[child.value.outlet] = child; });\n    }\n    return map$$1;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Represents the state of the router.\n *\n * RouterState is a tree of activated routes. Every node in this tree knows about the \"consumed\" URL\n * segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * See `ActivatedRoute` for more information.\n *\n *\n */\nvar RouterState = /** @class */ (function (_super) {\n    tslib_1.__extends(RouterState, _super);\n    /** @internal */\n    function RouterState(root, /** The current snapshot of the router state */\n    snapshot) {\n        var _this = _super.call(this, root) || this;\n        _this.snapshot = snapshot;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterState.prototype.toString = function () { return this.snapshot.toString(); };\n    return RouterState;\n}(Tree));\nfunction createEmptyState(urlTree, rootComponent) {\n    var snapshot = createEmptyStateSnapshot(urlTree, rootComponent);\n    var emptyUrl = new rxjs.BehaviorSubject([new UrlSegment('', {})]);\n    var emptyParams = new rxjs.BehaviorSubject({});\n    var emptyData = new rxjs.BehaviorSubject({});\n    var emptyQueryParams = new rxjs.BehaviorSubject({});\n    var fragment = new rxjs.BehaviorSubject('');\n    var activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n    activated.snapshot = snapshot.root;\n    return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(urlTree, rootComponent) {\n    var emptyParams = {};\n    var emptyData = {};\n    var emptyQueryParams = {};\n    var fragment = '';\n    var activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, urlTree.root, -1, {});\n    return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet.  An `ActivatedRoute` can also be used to traverse the router state tree.\n *\n * ```\n * @Component({...})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: Observable<string> = route.params.map(p => p.id);\n *     const url: Observable<string> = route.url.map(segments => segments.join(''));\n *     // route.data includes both `data` and `resolve`\n *     const user = route.data.map(d => d.user);\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRoute = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRoute(/** An observable of the URL segments matched by this route */\n    url, /** An observable of the matrix parameters scoped to this route */\n    params, /** An observable of the query parameters shared by all the routes */\n    queryParams, /** An observable of the URL fragment shared by all the routes */\n    fragment, /** An observable of the static and resolved data of this route. */\n    data, /** The outlet name of the route. It's a constant */\n    outlet, /** The component of the route. It's a constant */\n    // TODO(vsavkin): remove |string\n    component, futureSnapshot) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this._futureSnapshot = futureSnapshot;\n    }\n    Object.defineProperty(ActivatedRoute.prototype, \"routeConfig\", {\n        /** The configuration used to match this route */\n        get: /** The configuration used to match this route */\n        function () { return this._futureSnapshot.routeConfig; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"root\", {\n        /** The root of the router state */\n        get: /** The root of the router state */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /** The parent of this route in the router state tree */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /** The first child of this route in the router state tree */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /** The children of this route in the router state tree */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /** The path from the root of the router state tree to this route */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = this.params.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRoute.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap =\n                    this.queryParams.pipe(operators.map(function (p) { return convertToParamMap(p); }));\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRoute.prototype.toString = function () {\n        return this.snapshot ? this.snapshot.toString() : \"Future(\" + this._futureSnapshot + \")\";\n    };\n    return ActivatedRoute;\n}());\n/**\n * Returns the inherited params, data, and resolve for a given route.\n * By default, this only inherits values up to the nearest path-less or component-less route.\n * @internal\n */\nfunction inheritedParamsDataResolve(route, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    var pathFromRoot = route.pathFromRoot;\n    var inheritingStartingFrom = 0;\n    if (paramsInheritanceStrategy !== 'always') {\n        inheritingStartingFrom = pathFromRoot.length - 1;\n        while (inheritingStartingFrom >= 1) {\n            var current = pathFromRoot[inheritingStartingFrom];\n            var parent_1 = pathFromRoot[inheritingStartingFrom - 1];\n            // current route is an empty path => inherits its parent's params and data\n            if (current.routeConfig && current.routeConfig.path === '') {\n                inheritingStartingFrom--;\n                // parent is componentless => current route should inherit its params and data\n            }\n            else if (!parent_1.component) {\n                inheritingStartingFrom--;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return flattenInherited(pathFromRoot.slice(inheritingStartingFrom));\n}\n/** @internal */\nfunction flattenInherited(pathFromRoot) {\n    return pathFromRoot.reduce(function (res, curr) {\n        var params = tslib_1.__assign({}, res.params, curr.params);\n        var data = tslib_1.__assign({}, res.data, curr.data);\n        var resolve = tslib_1.__assign({}, res.resolve, curr._resolvedData);\n        return { params: params, data: data, resolve: resolve };\n    }, { params: {}, data: {}, resolve: {} });\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n *\n */\nvar ActivatedRouteSnapshot = /** @class */ (function () {\n    /** @internal */\n    function ActivatedRouteSnapshot(/** The URL segments matched by this route */\n    url, /** The matrix parameters scoped to this route */\n    params, /** The query parameters shared by all the routes */\n    queryParams, /** The URL fragment shared by all the routes */\n    fragment, /** The static and resolved data of this route */\n    data, /** The outlet name of the route */\n    outlet, /** The component of the route */\n    component, routeConfig, urlSegment, lastPathIndex, resolve) {\n        this.url = url;\n        this.params = params;\n        this.queryParams = queryParams;\n        this.fragment = fragment;\n        this.data = data;\n        this.outlet = outlet;\n        this.component = component;\n        this.routeConfig = routeConfig;\n        this._urlSegment = urlSegment;\n        this._lastPathIndex = lastPathIndex;\n        this._resolve = resolve;\n    }\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"root\", {\n        /** The root of the router state */\n        get: /** The root of the router state */\n        function () { return this._routerState.root; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"parent\", {\n        /** The parent of this route in the router state tree */\n        get: /** The parent of this route in the router state tree */\n        function () { return this._routerState.parent(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"firstChild\", {\n        /** The first child of this route in the router state tree */\n        get: /** The first child of this route in the router state tree */\n        function () { return this._routerState.firstChild(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"children\", {\n        /** The children of this route in the router state tree */\n        get: /** The children of this route in the router state tree */\n        function () { return this._routerState.children(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"pathFromRoot\", {\n        /** The path from the root of the router state tree to this route */\n        get: /** The path from the root of the router state tree to this route */\n        function () { return this._routerState.pathFromRoot(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"paramMap\", {\n        get: function () {\n            if (!this._paramMap) {\n                this._paramMap = convertToParamMap(this.params);\n            }\n            return this._paramMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ActivatedRouteSnapshot.prototype, \"queryParamMap\", {\n        get: function () {\n            if (!this._queryParamMap) {\n                this._queryParamMap = convertToParamMap(this.queryParams);\n            }\n            return this._queryParamMap;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ActivatedRouteSnapshot.prototype.toString = function () {\n        var url = this.url.map(function (segment) { return segment.toString(); }).join('/');\n        var matched = this.routeConfig ? this.routeConfig.path : '';\n        return \"Route(url:'\" + url + \"', path:'\" + matched + \"')\";\n    };\n    return ActivatedRouteSnapshot;\n}());\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n *\n */\nvar RouterStateSnapshot = /** @class */ (function (_super) {\n    tslib_1.__extends(RouterStateSnapshot, _super);\n    /** @internal */\n    function RouterStateSnapshot(/** The url from which this snapshot was created */\n    url, root) {\n        var _this = _super.call(this, root) || this;\n        _this.url = url;\n        setRouterState(_this, root);\n        return _this;\n    }\n    RouterStateSnapshot.prototype.toString = function () { return serializeNode(this._root); };\n    return RouterStateSnapshot;\n}(Tree));\nfunction setRouterState(state, node) {\n    node.value._routerState = state;\n    node.children.forEach(function (c) { return setRouterState(state, c); });\n}\nfunction serializeNode(node) {\n    var c = node.children.length > 0 ? \" { \" + node.children.map(serializeNode).join(', ') + \" } \" : '';\n    return \"\" + node.value + c;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n    if (route.snapshot) {\n        var currentSnapshot = route.snapshot;\n        var nextSnapshot = route._futureSnapshot;\n        route.snapshot = nextSnapshot;\n        if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n            route.queryParams.next(nextSnapshot.queryParams);\n        }\n        if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n            route.fragment.next(nextSnapshot.fragment);\n        }\n        if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n            route.params.next(nextSnapshot.params);\n        }\n        if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n            route.url.next(nextSnapshot.url);\n        }\n        if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n            route.data.next(nextSnapshot.data);\n        }\n    }\n    else {\n        route.snapshot = route._futureSnapshot;\n        // this is for resolved data\n        // this is for resolved data\n        route.data.next(route._futureSnapshot.data);\n    }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n    var equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n    var parentsMismatch = !a.parent !== !b.parent;\n    return equalUrlParams && !parentsMismatch &&\n        (!a.parent || equalParamsAndUrlSegments(a.parent, (b.parent)));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n    var root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n    return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n    // reuse an activated route that is currently displayed on the screen\n    if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n        var value = prevState.value;\n        value._futureSnapshot = curr.value;\n        var children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n        return new TreeNode(value, children);\n        // retrieve an activated route that is used to be displayed, but is not currently displayed\n    }\n    else if (routeReuseStrategy.retrieve(curr.value)) {\n        var tree = routeReuseStrategy.retrieve(curr.value).route;\n        setFutureSnapshotsOfActivatedRoutes(curr, tree);\n        return tree;\n    }\n    else {\n        var value = createActivatedRoute(curr.value);\n        var children = curr.children.map(function (c) { return createNode(routeReuseStrategy, c); });\n        return new TreeNode(value, children);\n    }\n}\nfunction setFutureSnapshotsOfActivatedRoutes(curr, result) {\n    if (curr.value.routeConfig !== result.value.routeConfig) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot created from a different route');\n    }\n    if (curr.children.length !== result.children.length) {\n        throw new Error('Cannot reattach ActivatedRouteSnapshot with a different number of children');\n    }\n    result.value._futureSnapshot = curr.value;\n    for (var i = 0; i < curr.children.length; ++i) {\n        setFutureSnapshotsOfActivatedRoutes(curr.children[i], result.children[i]);\n    }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n    return curr.children.map(function (child) {\n        try {\n            for (var _a = tslib_1.__values(prevState.children), _b = _a.next(); !_b.done; _b = _a.next()) {\n                var p = _b.value;\n                if (routeReuseStrategy.shouldReuseRoute(p.value.snapshot, child.value)) {\n                    return createNode(routeReuseStrategy, child, p);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return createNode(routeReuseStrategy, child);\n        var e_1, _c;\n    });\n}\nfunction createActivatedRoute(c) {\n    return new ActivatedRoute(new rxjs.BehaviorSubject(c.url), new rxjs.BehaviorSubject(c.params), new rxjs.BehaviorSubject(c.queryParams), new rxjs.BehaviorSubject(c.fragment), new rxjs.BehaviorSubject(c.data), c.outlet, c.component, c);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction createUrlTree(route, urlTree, commands, queryParams, fragment) {\n    if (commands.length === 0) {\n        return tree(urlTree.root, urlTree.root, urlTree, queryParams, fragment);\n    }\n    var nav = computeNavigation(commands);\n    if (nav.toRoot()) {\n        return tree(urlTree.root, new UrlSegmentGroup([], {}), urlTree, queryParams, fragment);\n    }\n    var startingPosition = findStartingPosition(nav, urlTree, route);\n    var segmentGroup = startingPosition.processChildren ?\n        updateSegmentGroupChildren(startingPosition.segmentGroup, startingPosition.index, nav.commands) :\n        updateSegmentGroup(startingPosition.segmentGroup, startingPosition.index, nav.commands);\n    return tree(startingPosition.segmentGroup, segmentGroup, urlTree, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n    return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\nfunction tree(oldSegmentGroup, newSegmentGroup, urlTree, queryParams, fragment) {\n    var qp = {};\n    if (queryParams) {\n        forEach(queryParams, function (value, name) {\n            qp[name] = Array.isArray(value) ? value.map(function (v) { return \"\" + v; }) : \"\" + value;\n        });\n    }\n    if (urlTree.root === oldSegmentGroup) {\n        return new UrlTree(newSegmentGroup, qp, fragment);\n    }\n    return new UrlTree(replaceSegment(urlTree.root, oldSegmentGroup, newSegmentGroup), qp, fragment);\n}\nfunction replaceSegment(current, oldSegment, newSegment) {\n    var children = {};\n    forEach(current.children, function (c, outletName) {\n        if (c === oldSegment) {\n            children[outletName] = newSegment;\n        }\n        else {\n            children[outletName] = replaceSegment(c, oldSegment, newSegment);\n        }\n    });\n    return new UrlSegmentGroup(current.segments, children);\n}\nvar Navigation = /** @class */ (function () {\n    function Navigation(isAbsolute, numberOfDoubleDots, commands) {\n        this.isAbsolute = isAbsolute;\n        this.numberOfDoubleDots = numberOfDoubleDots;\n        this.commands = commands;\n        if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n            throw new Error('Root segment cannot have matrix parameters');\n        }\n        var cmdWithOutlet = commands.find(function (c) { return typeof c === 'object' && c != null && c.outlets; });\n        if (cmdWithOutlet && cmdWithOutlet !== last$1(commands)) {\n            throw new Error('{outlets:{}} has to be the last command');\n        }\n    }\n    Navigation.prototype.toRoot = function () {\n        return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n    };\n    return Navigation;\n}());\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n    if ((typeof commands[0] === 'string') && commands.length === 1 && commands[0] === '/') {\n        return new Navigation(true, 0, commands);\n    }\n    var numberOfDoubleDots = 0;\n    var isAbsolute = false;\n    var res = commands.reduce(function (res, cmd, cmdIdx) {\n        if (typeof cmd === 'object' && cmd != null) {\n            if (cmd.outlets) {\n                var outlets_1 = {};\n                forEach(cmd.outlets, function (commands, name) {\n                    outlets_1[name] = typeof commands === 'string' ? commands.split('/') : commands;\n                });\n                return tslib_1.__spread(res, [{ outlets: outlets_1 }]);\n            }\n            if (cmd.segmentPath) {\n                return tslib_1.__spread(res, [cmd.segmentPath]);\n            }\n        }\n        if (!(typeof cmd === 'string')) {\n            return tslib_1.__spread(res, [cmd]);\n        }\n        if (cmdIdx === 0) {\n            cmd.split('/').forEach(function (urlPart, partIndex) {\n                if (partIndex == 0 && urlPart === '.') {\n                    // skip './a'\n                }\n                else if (partIndex == 0 && urlPart === '') {\n                    //  '/a'\n                    isAbsolute = true;\n                }\n                else if (urlPart === '..') {\n                    //  '../a'\n                    numberOfDoubleDots++;\n                }\n                else if (urlPart != '') {\n                    res.push(urlPart);\n                }\n            });\n            return res;\n        }\n        return tslib_1.__spread(res, [cmd]);\n    }, []);\n    return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nvar Position = /** @class */ (function () {\n    function Position(segmentGroup, processChildren, index) {\n        this.segmentGroup = segmentGroup;\n        this.processChildren = processChildren;\n        this.index = index;\n    }\n    return Position;\n}());\nfunction findStartingPosition(nav, tree, route) {\n    if (nav.isAbsolute) {\n        return new Position(tree.root, true, 0);\n    }\n    if (route.snapshot._lastPathIndex === -1) {\n        return new Position(route.snapshot._urlSegment, true, 0);\n    }\n    var modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n    var index = route.snapshot._lastPathIndex + modifier;\n    return createPositionApplyingDoubleDots(route.snapshot._urlSegment, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n    var g = group;\n    var ci = index;\n    var dd = numberOfDoubleDots;\n    while (dd > ci) {\n        dd -= ci;\n        g = (g.parent);\n        if (!g) {\n            throw new Error('Invalid number of \\'../\\'');\n        }\n        ci = g.segments.length;\n    }\n    return new Position(g, false, ci - dd);\n}\nfunction getPath(command) {\n    if (typeof command === 'object' && command != null && command.outlets) {\n        return command.outlets[PRIMARY_OUTLET];\n    }\n    return \"\" + command;\n}\nfunction getOutlets(commands) {\n    if (!(typeof commands[0] === 'object'))\n        return _a = {}, _a[PRIMARY_OUTLET] = commands, _a;\n    if (commands[0].outlets === undefined)\n        return _b = {}, _b[PRIMARY_OUTLET] = commands, _b;\n    return commands[0].outlets;\n    var _a, _b;\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n    if (!segmentGroup) {\n        segmentGroup = new UrlSegmentGroup([], {});\n    }\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n        return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n    }\n    var m = prefixedWith(segmentGroup, startIndex, commands);\n    var slicedCommands = commands.slice(m.commandIndex);\n    if (m.match && m.pathIndex < segmentGroup.segments.length) {\n        var g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n        g.children[PRIMARY_OUTLET] =\n            new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n        return updateSegmentGroupChildren(g, 0, slicedCommands);\n    }\n    else if (m.match && slicedCommands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else if (m.match && !segmentGroup.hasChildren()) {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n    else if (m.match) {\n        return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n    }\n    else {\n        return createNewSegmentGroup(segmentGroup, startIndex, commands);\n    }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n    if (commands.length === 0) {\n        return new UrlSegmentGroup(segmentGroup.segments, {});\n    }\n    else {\n        var outlets_2 = getOutlets(commands);\n        var children_1 = {};\n        forEach(outlets_2, function (commands, outlet) {\n            if (commands !== null) {\n                children_1[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n            }\n        });\n        forEach(segmentGroup.children, function (child, childOutlet) {\n            if (outlets_2[childOutlet] === undefined) {\n                children_1[childOutlet] = child;\n            }\n        });\n        return new UrlSegmentGroup(segmentGroup.segments, children_1);\n    }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n    var currentCommandIndex = 0;\n    var currentPathIndex = startIndex;\n    var noMatch = { match: false, pathIndex: 0, commandIndex: 0 };\n    while (currentPathIndex < segmentGroup.segments.length) {\n        if (currentCommandIndex >= commands.length)\n            return noMatch;\n        var path = segmentGroup.segments[currentPathIndex];\n        var curr = getPath(commands[currentCommandIndex]);\n        var next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n        if (currentPathIndex > 0 && curr === undefined)\n            break;\n        if (curr && next && (typeof next === 'object') && next.outlets === undefined) {\n            if (!compare(curr, next, path))\n                return noMatch;\n            currentCommandIndex += 2;\n        }\n        else {\n            if (!compare(curr, {}, path))\n                return noMatch;\n            currentCommandIndex++;\n        }\n        currentPathIndex++;\n    }\n    return { match: true, pathIndex: currentPathIndex, commandIndex: currentCommandIndex };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n    var paths = segmentGroup.segments.slice(0, startIndex);\n    var i = 0;\n    while (i < commands.length) {\n        if (typeof commands[i] === 'object' && commands[i].outlets !== undefined) {\n            var children = createNewSegmentChildren(commands[i].outlets);\n            return new UrlSegmentGroup(paths, children);\n        }\n        // if we start with an object literal, we need to reuse the path part from the segment\n        if (i === 0 && isMatrixParams(commands[0])) {\n            var p = segmentGroup.segments[startIndex];\n            paths.push(new UrlSegment(p.path, commands[0]));\n            i++;\n            continue;\n        }\n        var curr = getPath(commands[i]);\n        var next = (i < commands.length - 1) ? commands[i + 1] : null;\n        if (curr && next && isMatrixParams(next)) {\n            paths.push(new UrlSegment(curr, stringify(next)));\n            i += 2;\n        }\n        else {\n            paths.push(new UrlSegment(curr, {}));\n            i++;\n        }\n    }\n    return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n    var children = {};\n    forEach(outlets, function (commands, outlet) {\n        if (commands !== null) {\n            children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n        }\n    });\n    return children;\n}\nfunction stringify(params) {\n    var res = {};\n    forEach(params, function (v, k) { return res[k] = \"\" + v; });\n    return res;\n}\nfunction compare(path, params, segment) {\n    return path == segment.path && shallowEqual(params, segment.parameters);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar CanActivate = /** @class */ (function () {\n    function CanActivate(path) {\n        this.path = path;\n        this.route = this.path[this.path.length - 1];\n    }\n    return CanActivate;\n}());\nvar CanDeactivate = /** @class */ (function () {\n    function CanDeactivate(component, route) {\n        this.component = component;\n        this.route = route;\n    }\n    return CanDeactivate;\n}());\n/**\n * This class bundles the actions involved in preactivation of a route.\n */\nvar PreActivation = /** @class */ (function () {\n    function PreActivation(future, curr, moduleInjector, forwardEvent) {\n        this.future = future;\n        this.curr = curr;\n        this.moduleInjector = moduleInjector;\n        this.forwardEvent = forwardEvent;\n        this.canActivateChecks = [];\n        this.canDeactivateChecks = [];\n    }\n    PreActivation.prototype.initialize = function (parentContexts) {\n        var futureRoot = this.future._root;\n        var currRoot = this.curr ? this.curr._root : null;\n        this.setupChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n    };\n    PreActivation.prototype.checkGuards = function () {\n        var _this = this;\n        if (!this.isDeactivating() && !this.isActivating()) {\n            return rxjs.of(true);\n        }\n        var canDeactivate$ = this.runCanDeactivateChecks();\n        return canDeactivate$.pipe(operators.mergeMap(function (canDeactivate) { return canDeactivate ? _this.runCanActivateChecks() : rxjs.of(false); }));\n    };\n    PreActivation.prototype.resolveData = function (paramsInheritanceStrategy) {\n        var _this = this;\n        if (!this.isActivating())\n            return rxjs.of(null);\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) { return _this.runResolve(check.route, paramsInheritanceStrategy); }), operators.reduce(function (_, __) { return _; }));\n    };\n    PreActivation.prototype.isDeactivating = function () { return this.canDeactivateChecks.length !== 0; };\n    PreActivation.prototype.isActivating = function () { return this.canActivateChecks.length !== 0; };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    /**\n       * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n       * proper state to run `checkGuards()` method.\n       */\n    PreActivation.prototype.setupChildRouteGuards = /**\n       * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n       * proper state to run `checkGuards()` method.\n       */\n    function (futureNode, currNode, contexts, futurePath) {\n        var _this = this;\n        var prevChildren = nodeChildrenAsMap(currNode);\n        // Process the children of the future route\n        futureNode.children.forEach(function (c) {\n            _this.setupRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]));\n            delete prevChildren[c.value.outlet];\n        });\n        // Process any children left from the current route (not active for the future route)\n        forEach(prevChildren, function (v, k) {\n            return _this.deactivateRouteAndItsChildren(v, contexts.getContext(k));\n        });\n    };\n    /**\n     * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n     * proper state to run `checkGuards()` method.\n     */\n    /**\n       * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n       * proper state to run `checkGuards()` method.\n       */\n    PreActivation.prototype.setupRouteGuards = /**\n       * Iterates over child routes and calls recursive `setupRouteGuards` to get `this` instance in\n       * proper state to run `checkGuards()` method.\n       */\n    function (futureNode, currNode, parentContexts, futurePath) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        var context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n        // reusing the node\n        if (curr && future.routeConfig === curr.routeConfig) {\n            var shouldRunGuardsAndResolvers = this.shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n            if (shouldRunGuardsAndResolvers) {\n                this.canActivateChecks.push(new CanActivate(futurePath));\n            }\n            else {\n                // we need to set the data\n                future.data = curr.data;\n                future._resolvedData = curr._resolvedData;\n            }\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, currNode, parentContexts, futurePath);\n            }\n            if (shouldRunGuardsAndResolvers) {\n                var outlet = (context.outlet);\n                this.canDeactivateChecks.push(new CanDeactivate(outlet.component, curr));\n            }\n        }\n        else {\n            if (curr) {\n                this.deactivateRouteAndItsChildren(currNode, context);\n            }\n            this.canActivateChecks.push(new CanActivate(futurePath));\n            // If we have a component, we need to go through an outlet.\n            if (future.component) {\n                this.setupChildRouteGuards(futureNode, null, context ? context.children : null, futurePath);\n                // if we have a componentless route, we recurse but keep the same outlet map.\n            }\n            else {\n                this.setupChildRouteGuards(futureNode, null, parentContexts, futurePath);\n            }\n        }\n    };\n    PreActivation.prototype.shouldRunGuardsAndResolvers = function (curr, future, mode) {\n        switch (mode) {\n            case 'always':\n                return true;\n            case 'paramsOrQueryParamsChange':\n                return !equalParamsAndUrlSegments(curr, future) ||\n                    !shallowEqual(curr.queryParams, future.queryParams);\n            case 'paramsChange':\n            default:\n                return !equalParamsAndUrlSegments(curr, future);\n        }\n    };\n    PreActivation.prototype.deactivateRouteAndItsChildren = function (route, context) {\n        var _this = this;\n        var children = nodeChildrenAsMap(route);\n        var r = route.value;\n        forEach(children, function (node, childName) {\n            if (!r.component) {\n                _this.deactivateRouteAndItsChildren(node, context);\n            }\n            else if (context) {\n                _this.deactivateRouteAndItsChildren(node, context.children.getContext(childName));\n            }\n            else {\n                _this.deactivateRouteAndItsChildren(node, null);\n            }\n        });\n        if (!r.component) {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n        else if (context && context.outlet && context.outlet.isActivated) {\n            this.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n        }\n        else {\n            this.canDeactivateChecks.push(new CanDeactivate(null, r));\n        }\n    };\n    PreActivation.prototype.runCanDeactivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canDeactivateChecks)\n            .pipe(operators.mergeMap(function (check) { return _this.runCanDeactivate(check.component, check.route); }), operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runCanActivateChecks = function () {\n        var _this = this;\n        return rxjs.from(this.canActivateChecks)\n            .pipe(operators.concatMap(function (check) {\n            return andObservables(rxjs.from([\n                _this.fireChildActivationStart(check.route.parent),\n                _this.fireActivationStart(check.route), _this.runCanActivateChild(check.path),\n                _this.runCanActivate(check.route)\n            ]));\n        }), operators.every(function (result) { return result === true; }));\n        // this.fireChildActivationStart(check.path),\n    };\n    /**\n     * This should fire off `ActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    /**\n       * This should fire off `ActivationStart` events for each route being activated at this\n       * level.\n       * In other words, if you're activating `a` and `b` below, `path` will contain the\n       * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n       * return\n       * `true` so checks continue to run.\n       */\n    PreActivation.prototype.fireActivationStart = /**\n       * This should fire off `ActivationStart` events for each route being activated at this\n       * level.\n       * In other words, if you're activating `a` and `b` below, `path` will contain the\n       * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n       * return\n       * `true` so checks continue to run.\n       */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    /**\n     * This should fire off `ChildActivationStart` events for each route being activated at this\n     * level.\n     * In other words, if you're activating `a` and `b` below, `path` will contain the\n     * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n     * return\n     * `true` so checks continue to run.\n     */\n    /**\n       * This should fire off `ChildActivationStart` events for each route being activated at this\n       * level.\n       * In other words, if you're activating `a` and `b` below, `path` will contain the\n       * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n       * return\n       * `true` so checks continue to run.\n       */\n    PreActivation.prototype.fireChildActivationStart = /**\n       * This should fire off `ChildActivationStart` events for each route being activated at this\n       * level.\n       * In other words, if you're activating `a` and `b` below, `path` will contain the\n       * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n       * return\n       * `true` so checks continue to run.\n       */\n    function (snapshot) {\n        if (snapshot !== null && this.forwardEvent) {\n            this.forwardEvent(new ChildActivationStart(snapshot));\n        }\n        return rxjs.of(true);\n    };\n    PreActivation.prototype.runCanActivate = function (future) {\n        var _this = this;\n        var canActivate = future.routeConfig ? future.routeConfig.canActivate : null;\n        if (!canActivate || canActivate.length === 0)\n            return rxjs.of(true);\n        var obs = rxjs.from(canActivate).pipe(operators.map(function (c) {\n            var guard = _this.getToken(c, future);\n            var observable;\n            if (guard.canActivate) {\n                observable = wrapIntoObservable(guard.canActivate(future, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(future, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return andObservables(obs);\n    };\n    PreActivation.prototype.runCanActivateChild = function (path) {\n        var _this = this;\n        var future = path[path.length - 1];\n        var canActivateChildGuards = path.slice(0, path.length - 1)\n            .reverse()\n            .map(function (p) { return _this.extractCanActivateChild(p); })\n            .filter(function (_) { return _ !== null; });\n        return andObservables(rxjs.from(canActivateChildGuards).pipe(operators.map(function (d) {\n            var obs = rxjs.from(d.guards).pipe(operators.map(function (c) {\n                var guard = _this.getToken(c, d.node);\n                var observable;\n                if (guard.canActivateChild) {\n                    observable = wrapIntoObservable(guard.canActivateChild(future, _this.future));\n                }\n                else {\n                    observable = wrapIntoObservable(guard(future, _this.future));\n                }\n                return observable.pipe(operators.first());\n            }));\n            return andObservables(obs);\n        })));\n    };\n    PreActivation.prototype.extractCanActivateChild = function (p) {\n        var canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n        if (!canActivateChild || canActivateChild.length === 0)\n            return null;\n        return { node: p, guards: canActivateChild };\n    };\n    PreActivation.prototype.runCanDeactivate = function (component, curr) {\n        var _this = this;\n        var canDeactivate = curr && curr.routeConfig ? curr.routeConfig.canDeactivate : null;\n        if (!canDeactivate || canDeactivate.length === 0)\n            return rxjs.of(true);\n        var canDeactivate$ = rxjs.from(canDeactivate).pipe(operators.mergeMap(function (c) {\n            var guard = _this.getToken(c, curr);\n            var observable;\n            if (guard.canDeactivate) {\n                observable =\n                    wrapIntoObservable(guard.canDeactivate(component, curr, _this.curr, _this.future));\n            }\n            else {\n                observable = wrapIntoObservable(guard(component, curr, _this.curr, _this.future));\n            }\n            return observable.pipe(operators.first());\n        }));\n        return canDeactivate$.pipe(operators.every(function (result) { return result === true; }));\n    };\n    PreActivation.prototype.runResolve = function (future, paramsInheritanceStrategy) {\n        var resolve = future._resolve;\n        return this.resolveNode(resolve, future).pipe(operators.map(function (resolvedData) {\n            future._resolvedData = resolvedData;\n            future.data = tslib_1.__assign({}, future.data, inheritedParamsDataResolve(future, paramsInheritanceStrategy).resolve);\n            return null;\n        }));\n    };\n    PreActivation.prototype.resolveNode = function (resolve, future) {\n        var _this = this;\n        var keys = Object.keys(resolve);\n        if (keys.length === 0) {\n            return rxjs.of({});\n        }\n        if (keys.length === 1) {\n            var key_1 = keys[0];\n            return this.getResolver(resolve[key_1], future).pipe(operators.map(function (value) {\n                return _a = {}, _a[key_1] = value, _a;\n                var _a;\n            }));\n        }\n        var data = {};\n        var runningResolvers$ = rxjs.from(keys).pipe(operators.mergeMap(function (key) {\n            return _this.getResolver(resolve[key], future).pipe(operators.map(function (value) {\n                data[key] = value;\n                return value;\n            }));\n        }));\n        return runningResolvers$.pipe(operators.last(), operators.map(function () { return data; }));\n    };\n    PreActivation.prototype.getResolver = function (injectionToken, future) {\n        var resolver = this.getToken(injectionToken, future);\n        return resolver.resolve ? wrapIntoObservable(resolver.resolve(future, this.future)) :\n            wrapIntoObservable(resolver(future, this.future));\n    };\n    PreActivation.prototype.getToken = function (token, snapshot) {\n        var config = closestLoadedConfig(snapshot);\n        var injector = config ? config.module.injector : this.moduleInjector;\n        return injector.get(token);\n    };\n    return PreActivation;\n}());\nfunction closestLoadedConfig(snapshot) {\n    if (!snapshot)\n        return null;\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n    }\n    return null;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NoMatch$1 = /** @class */ (function () {\n    function NoMatch() {\n    }\n    return NoMatch;\n}());\nfunction recognize(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n    if (paramsInheritanceStrategy === void 0) { paramsInheritanceStrategy = 'emptyOnly'; }\n    return new Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy)\n        .recognize();\n}\nvar Recognizer = /** @class */ (function () {\n    function Recognizer(rootComponentType, config, urlTree, url, paramsInheritanceStrategy) {\n        this.rootComponentType = rootComponentType;\n        this.config = config;\n        this.urlTree = urlTree;\n        this.url = url;\n        this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    }\n    Recognizer.prototype.recognize = function () {\n        try {\n            var rootSegmentGroup = split$1(this.urlTree.root, [], [], this.config).segmentGroup;\n            var children = this.processSegmentGroup(this.config, rootSegmentGroup, PRIMARY_OUTLET);\n            var root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze(this.urlTree.queryParams), (this.urlTree.fragment), {}, PRIMARY_OUTLET, this.rootComponentType, null, this.urlTree.root, -1, {});\n            var rootNode = new TreeNode(root, children);\n            var routeState = new RouterStateSnapshot(this.url, rootNode);\n            this.inheritParamsAndData(routeState._root);\n            return rxjs.of(routeState);\n        }\n        catch (e) {\n            return new rxjs.Observable(function (obs) { return obs.error(e); });\n        }\n    };\n    Recognizer.prototype.inheritParamsAndData = function (routeNode) {\n        var _this = this;\n        var route = routeNode.value;\n        var i = inheritedParamsDataResolve(route, this.paramsInheritanceStrategy);\n        route.params = Object.freeze(i.params);\n        route.data = Object.freeze(i.data);\n        routeNode.children.forEach(function (n) { return _this.inheritParamsAndData(n); });\n    };\n    Recognizer.prototype.processSegmentGroup = function (config, segmentGroup, outlet) {\n        if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n            return this.processChildren(config, segmentGroup);\n        }\n        return this.processSegment(config, segmentGroup, segmentGroup.segments, outlet);\n    };\n    Recognizer.prototype.processChildren = function (config, segmentGroup) {\n        var _this = this;\n        var children = mapChildrenIntoArray(segmentGroup, function (child, childOutlet) { return _this.processSegmentGroup(config, child, childOutlet); });\n        checkOutletNameUniqueness(children);\n        sortActivatedRouteSnapshots(children);\n        return children;\n    };\n    Recognizer.prototype.processSegment = function (config, segmentGroup, segments, outlet) {\n        try {\n            for (var config_1 = tslib_1.__values(config), config_1_1 = config_1.next(); !config_1_1.done; config_1_1 = config_1.next()) {\n                var r = config_1_1.value;\n                try {\n                    return this.processSegmentAgainstRoute(r, segmentGroup, segments, outlet);\n                }\n                catch (e) {\n                    if (!(e instanceof NoMatch$1))\n                        throw e;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (config_1_1 && !config_1_1.done && (_a = config_1.return)) _a.call(config_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (this.noLeftoversInUrl(segmentGroup, segments, outlet)) {\n            return [];\n        }\n        throw new NoMatch$1();\n        var e_1, _a;\n    };\n    Recognizer.prototype.noLeftoversInUrl = function (segmentGroup, segments, outlet) {\n        return segments.length === 0 && !segmentGroup.children[outlet];\n    };\n    Recognizer.prototype.processSegmentAgainstRoute = function (route, rawSegment, segments, outlet) {\n        if (route.redirectTo)\n            throw new NoMatch$1();\n        if ((route.outlet || PRIMARY_OUTLET) !== outlet)\n            throw new NoMatch$1();\n        var snapshot;\n        var consumedSegments = [];\n        var rawSlicedSegments = [];\n        if (route.path === '**') {\n            var params = segments.length > 0 ? last$1(segments).parameters : {};\n            snapshot = new ActivatedRouteSnapshot(segments, params, Object.freeze(this.urlTree.queryParams), (this.urlTree.fragment), getData(route), outlet, (route.component), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + segments.length, getResolve(route));\n        }\n        else {\n            var result = match$1(rawSegment, route, segments);\n            consumedSegments = result.consumedSegments;\n            rawSlicedSegments = segments.slice(result.lastChild);\n            snapshot = new ActivatedRouteSnapshot(consumedSegments, result.parameters, Object.freeze(this.urlTree.queryParams), (this.urlTree.fragment), getData(route), outlet, (route.component), route, getSourceSegmentGroup(rawSegment), getPathIndexShift(rawSegment) + consumedSegments.length, getResolve(route));\n        }\n        var childConfig = getChildConfig(route);\n        var _a = split$1(rawSegment, consumedSegments, rawSlicedSegments, childConfig), segmentGroup = _a.segmentGroup, slicedSegments = _a.slicedSegments;\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n            var children_1 = this.processChildren(childConfig, segmentGroup);\n            return [new TreeNode(snapshot, children_1)];\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n            return [new TreeNode(snapshot, [])];\n        }\n        var children = this.processSegment(childConfig, segmentGroup, slicedSegments, PRIMARY_OUTLET);\n        return [new TreeNode(snapshot, children)];\n    };\n    return Recognizer;\n}());\nfunction sortActivatedRouteSnapshots(nodes) {\n    nodes.sort(function (a, b) {\n        if (a.value.outlet === PRIMARY_OUTLET)\n            return -1;\n        if (b.value.outlet === PRIMARY_OUTLET)\n            return 1;\n        return a.value.outlet.localeCompare(b.value.outlet);\n    });\n}\nfunction getChildConfig(route) {\n    if (route.children) {\n        return route.children;\n    }\n    if (route.loadChildren) {\n        return route._loadedConfig.routes;\n    }\n    return [];\n}\nfunction match$1(segmentGroup, route, segments) {\n    if (route.path === '') {\n        if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n            throw new NoMatch$1();\n        }\n        return { consumedSegments: [], lastChild: 0, parameters: {} };\n    }\n    var matcher = route.matcher || defaultUrlMatcher;\n    var res = matcher(segments, segmentGroup, route);\n    if (!res)\n        throw new NoMatch$1();\n    var posParams = {};\n    forEach((res.posParams), function (v, k) { posParams[k] = v.path; });\n    var parameters = res.consumed.length > 0 ? tslib_1.__assign({}, posParams, res.consumed[res.consumed.length - 1].parameters) :\n        posParams;\n    return { consumedSegments: res.consumed, lastChild: res.consumed.length, parameters: parameters };\n}\nfunction checkOutletNameUniqueness(nodes) {\n    var names = {};\n    nodes.forEach(function (n) {\n        var routeWithSameOutletName = names[n.value.outlet];\n        if (routeWithSameOutletName) {\n            var p = routeWithSameOutletName.url.map(function (s) { return s.toString(); }).join('/');\n            var c = n.value.url.map(function (s) { return s.toString(); }).join('/');\n            throw new Error(\"Two segments cannot have the same outlet name: '\" + p + \"' and '\" + c + \"'.\");\n        }\n        names[n.value.outlet] = n.value;\n    });\n}\nfunction getSourceSegmentGroup(segmentGroup) {\n    var s = segmentGroup;\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n    }\n    return s;\n}\nfunction getPathIndexShift(segmentGroup) {\n    var s = segmentGroup;\n    var res = (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    while (s._sourceSegment) {\n        s = s._sourceSegment;\n        res += (s._segmentIndexShift ? s._segmentIndexShift : 0);\n    }\n    return res - 1;\n}\nfunction split$1(segmentGroup, consumedSegments, slicedSegments, config) {\n    if (slicedSegments.length > 0 &&\n        containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n        var s_1 = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(segmentGroup, consumedSegments, config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n        s_1._sourceSegment = segmentGroup;\n        s_1._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_1, slicedSegments: [] };\n    }\n    if (slicedSegments.length === 0 &&\n        containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n        var s_2 = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n        s_2._sourceSegment = segmentGroup;\n        s_2._segmentIndexShift = consumedSegments.length;\n        return { segmentGroup: s_2, slicedSegments: slicedSegments };\n    }\n    var s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n    s._sourceSegment = segmentGroup;\n    s._segmentIndexShift = consumedSegments.length;\n    return { segmentGroup: s, slicedSegments: slicedSegments };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n    var res = {};\n    try {\n        for (var routes_1 = tslib_1.__values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n            var r = routes_1_1.value;\n            if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet$1(r)]) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = segmentGroup.segments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return tslib_1.__assign({}, children, res);\n    var e_2, _a;\n}\nfunction createChildrenForEmptyPaths(segmentGroup, consumedSegments, routes, primarySegment) {\n    var res = {};\n    res[PRIMARY_OUTLET] = primarySegment;\n    primarySegment._sourceSegment = segmentGroup;\n    primarySegment._segmentIndexShift = consumedSegments.length;\n    try {\n        for (var routes_2 = tslib_1.__values(routes), routes_2_1 = routes_2.next(); !routes_2_1.done; routes_2_1 = routes_2.next()) {\n            var r = routes_2_1.value;\n            if (r.path === '' && getOutlet$1(r) !== PRIMARY_OUTLET) {\n                var s = new UrlSegmentGroup([], {});\n                s._sourceSegment = segmentGroup;\n                s._segmentIndexShift = consumedSegments.length;\n                res[getOutlet$1(r)] = s;\n            }\n        }\n    }\n    catch (e_3_1) { e_3 = { error: e_3_1 }; }\n    finally {\n        try {\n            if (routes_2_1 && !routes_2_1.done && (_a = routes_2.return)) _a.call(routes_2);\n        }\n        finally { if (e_3) throw e_3.error; }\n    }\n    return res;\n    var e_3, _a;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet$1(r) !== PRIMARY_OUTLET; });\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n    return routes.some(function (r) { return emptyPathMatch(segmentGroup, slicedSegments, r); });\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n    if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n        return false;\n    }\n    return r.path === '' && r.redirectTo === undefined;\n}\nfunction getOutlet$1(route) {\n    return route.outlet || PRIMARY_OUTLET;\n}\nfunction getData(route) {\n    return route.data || {};\n}\nfunction getResolve(route) {\n    return route.resolve || {};\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @experimental\n */\nvar RouteReuseStrategy = /** @class */ (function () {\n    function RouteReuseStrategy() {\n    }\n    return RouteReuseStrategy;\n}());\n/**\n * Does not detach any subtrees. Reuses routes as long as their route config is the same.\n */\nvar DefaultRouteReuseStrategy = /** @class */ (function () {\n    function DefaultRouteReuseStrategy() {\n    }\n    DefaultRouteReuseStrategy.prototype.shouldDetach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.store = function (route, detachedTree) { };\n    DefaultRouteReuseStrategy.prototype.shouldAttach = function (route) { return false; };\n    DefaultRouteReuseStrategy.prototype.retrieve = function (route) { return null; };\n    DefaultRouteReuseStrategy.prototype.shouldReuseRoute = function (future, curr) {\n        return future.routeConfig === curr.routeConfig;\n    };\n    return DefaultRouteReuseStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @docsNotRequired\n * @experimental\n */\nvar ROUTES = new core.InjectionToken('ROUTES');\nvar RouterConfigLoader = /** @class */ (function () {\n    function RouterConfigLoader(loader, compiler, onLoadStartListener, onLoadEndListener) {\n        this.loader = loader;\n        this.compiler = compiler;\n        this.onLoadStartListener = onLoadStartListener;\n        this.onLoadEndListener = onLoadEndListener;\n    }\n    RouterConfigLoader.prototype.load = function (parentInjector, route) {\n        var _this = this;\n        if (this.onLoadStartListener) {\n            this.onLoadStartListener(route);\n        }\n        var moduleFactory$ = this.loadModuleFactory((route.loadChildren));\n        return moduleFactory$.pipe(operators.map(function (factory) {\n            if (_this.onLoadEndListener) {\n                _this.onLoadEndListener(route);\n            }\n            var module = factory.create(parentInjector);\n            return new LoadedRouterConfig(flatten(module.injector.get(ROUTES)).map(copyConfig), module);\n        }));\n    };\n    RouterConfigLoader.prototype.loadModuleFactory = function (loadChildren) {\n        var _this = this;\n        if (typeof loadChildren === 'string') {\n            return rxjs.from(this.loader.load(loadChildren));\n        }\n        else {\n            return wrapIntoObservable(loadChildren()).pipe(operators.mergeMap(function (t) {\n                if (t instanceof core.NgModuleFactory) {\n                    return rxjs.of(t);\n                }\n                else {\n                    return rxjs.from(_this.compiler.compileModuleAsync(t));\n                }\n            }));\n        }\n    };\n    return RouterConfigLoader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @experimental\n */\nvar UrlHandlingStrategy = /** @class */ (function () {\n    function UrlHandlingStrategy() {\n    }\n    return UrlHandlingStrategy;\n}());\n/**\n * @experimental\n */\nvar DefaultUrlHandlingStrategy = /** @class */ (function () {\n    function DefaultUrlHandlingStrategy() {\n    }\n    DefaultUrlHandlingStrategy.prototype.shouldProcessUrl = function (url) { return true; };\n    DefaultUrlHandlingStrategy.prototype.extract = function (url) { return url; };\n    DefaultUrlHandlingStrategy.prototype.merge = function (newUrlPart, wholeUrl) { return newUrlPart; };\n    return DefaultUrlHandlingStrategy;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction defaultErrorHandler(error) {\n    throw error;\n}\n/**\n * @internal\n */\nfunction defaultRouterHook(snapshot) {\n    return rxjs.of(null);\n}\n/**\n * @description\n *\n * Provides the navigation and url manipulation capabilities.\n *\n * See `Routes` for more details and examples.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar Router = /** @class */ (function () {\n    /**\n     * Creates the router service.\n     */\n    // TODO: vsavkin make internal after the final is out.\n    function Router(rootComponentType, urlSerializer, rootContexts, location, injector, loader, compiler, config) {\n        var _this = this;\n        this.rootComponentType = rootComponentType;\n        this.urlSerializer = urlSerializer;\n        this.rootContexts = rootContexts;\n        this.location = location;\n        this.config = config;\n        this.navigations = new rxjs.BehaviorSubject((null));\n        this.navigationId = 0;\n        this.events = new rxjs.Subject();\n        /**\n           * Error handler that is invoked when a navigation errors.\n           *\n           * See `ErrorHandler` for more information.\n           */\n        this.errorHandler = defaultErrorHandler;\n        /**\n           * Indicates if at least one navigation happened.\n           */\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n        /**\n           * Used by RouterModule. This allows us to\n           * pause the navigation either before preactivation or after it.\n           * @internal\n           */\n        this.hooks = {\n            beforePreactivation: defaultRouterHook,\n            afterPreactivation: defaultRouterHook\n        };\n        /**\n           * Extracts and merges URLs. Used for AngularJS to Angular migrations.\n           */\n        this.urlHandlingStrategy = new DefaultUrlHandlingStrategy();\n        this.routeReuseStrategy = new DefaultRouteReuseStrategy();\n        /**\n           * Define what the router should do if it receives a navigation request to the current URL.\n           * By default, the router will ignore this navigation. However, this prevents features such\n           * as a \"refresh\" button. Use this option to configure the behavior when navigating to the\n           * current URL. Default is 'ignore'.\n           */\n        this.onSameUrlNavigation = 'ignore';\n        /**\n           * Defines how the router merges params, data and resolved data from parent to child\n           * routes. Available options are:\n           *\n           * - `'emptyOnly'`, the default, only inherits parent params for path-less or component-less\n           *   routes.\n           * - `'always'`, enables unconditional inheritance of parent params.\n           */\n        this.paramsInheritanceStrategy = 'emptyOnly';\n        var onLoadStart = function (r) { return _this.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onLoadEnd = function (r) { return _this.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.ngModule = injector.get(core.NgModuleRef);\n        this.resetConfig(config);\n        this.currentUrlTree = createEmptyUrlTree();\n        this.rawUrlTree = this.currentUrlTree;\n        this.configLoader = new RouterConfigLoader(loader, compiler, onLoadStart, onLoadEnd);\n        this.routerState = createEmptyState(this.currentUrlTree, this.rootComponentType);\n        this.processNavigations();\n    }\n    /**\n     * @internal\n     * TODO: this should be removed once the constructor of the router made internal\n     */\n    /**\n       * @internal\n       * TODO: this should be removed once the constructor of the router made internal\n       */\n    Router.prototype.resetRootComponentType = /**\n       * @internal\n       * TODO: this should be removed once the constructor of the router made internal\n       */\n    function (rootComponentType) {\n        this.rootComponentType = rootComponentType;\n        // TODO: vsavkin router 4.0 should make the root component set to null\n        // this will simplify the lifecycle of the router.\n        this.routerState.root.component = this.rootComponentType;\n    };\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    /**\n       * Sets up the location change listener and performs the initial navigation.\n       */\n    Router.prototype.initialNavigation = /**\n       * Sets up the location change listener and performs the initial navigation.\n       */\n    function () {\n        this.setUpLocationChangeListener();\n        if (this.navigationId === 0) {\n            this.navigateByUrl(this.location.path(true), { replaceUrl: true });\n        }\n    };\n    /**\n     * Sets up the location change listener.\n     */\n    /**\n       * Sets up the location change listener.\n       */\n    Router.prototype.setUpLocationChangeListener = /**\n       * Sets up the location change listener.\n       */\n    function () {\n        var _this = this;\n        // Don't need to use Zone.wrap any more, because zone.js\n        // already patch onPopState, so location change callback will\n        // run into ngZone\n        if (!this.locationSubscription) {\n            this.locationSubscription = this.location.subscribe(function (change) {\n                var rawUrlTree = _this.urlSerializer.parse(change['url']);\n                var source = change['type'] === 'popstate' ? 'popstate' : 'hashchange';\n                var state = change.state && change.state.navigationId ?\n                    { navigationId: change.state.navigationId } :\n                    null;\n                setTimeout(function () { _this.scheduleNavigation(rawUrlTree, source, state, { replaceUrl: true }); }, 0);\n            });\n        }\n    };\n    Object.defineProperty(Router.prototype, \"url\", {\n        /** The current url */\n        get: /** The current url */\n        function () { return this.serializeUrl(this.currentUrlTree); },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    /** @internal */\n    Router.prototype.triggerEvent = /** @internal */\n    function (e) { this.events.next(e); };\n    /**\n     * Resets the configuration used for navigation and generating links.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    /**\n       * Resets the configuration used for navigation and generating links.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.resetConfig([\n       *  { path: 'team/:id', component: TeamCmp, children: [\n       *    { path: 'simple', component: SimpleCmp },\n       *    { path: 'user/:name', component: UserCmp }\n       *  ]}\n       * ]);\n       * ```\n       */\n    Router.prototype.resetConfig = /**\n       * Resets the configuration used for navigation and generating links.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.resetConfig([\n       *  { path: 'team/:id', component: TeamCmp, children: [\n       *    { path: 'simple', component: SimpleCmp },\n       *    { path: 'user/:name', component: UserCmp }\n       *  ]}\n       * ]);\n       * ```\n       */\n    function (config) {\n        validateConfig(config);\n        this.config = config.map(copyConfig);\n        this.navigated = false;\n        this.lastSuccessfulId = -1;\n    };\n    /** @docsNotRequired */\n    /** @docsNotRequired */\n    Router.prototype.ngOnDestroy = /** @docsNotRequired */\n    function () { this.dispose(); };\n    /** Disposes of the router */\n    /** Disposes of the router */\n    Router.prototype.dispose = /** Disposes of the router */\n    function () {\n        if (this.locationSubscription) {\n            this.locationSubscription.unsubscribe();\n            this.locationSubscription = (null);\n        }\n    };\n    /**\n     * Applies an array of commands to the current url tree and creates a new url tree.\n     *\n     * When given an activate route, applies the given commands starting from the route.\n     * When not given a route, applies the given command starting from the root.\n     *\n     * ### Usage\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it, you\n     * // can do the following:\n     *\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     * ```\n     */\n    /**\n       * Applies an array of commands to the current url tree and creates a new url tree.\n       *\n       * When given an activate route, applies the given commands starting from the route.\n       * When not given a route, applies the given command starting from the root.\n       *\n       * ### Usage\n       *\n       * ```\n       * // create /team/33/user/11\n       * router.createUrlTree(['/team', 33, 'user', 11]);\n       *\n       * // create /team/33;expand=true/user/11\n       * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n       *\n       * // you can collapse static segments like this (this works only with the first passed-in value):\n       * router.createUrlTree(['/team/33/user', userId]);\n       *\n       * // If the first segment can contain slashes, and you do not want the router to split it, you\n       * // can do the following:\n       *\n       * router.createUrlTree([{segmentPath: '/one/two'}]);\n       *\n       * // create /team/33/(user/11//right:chat)\n       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n       *\n       * // remove the right secondary node\n       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n       *\n       * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n       *\n       * // navigate to /team/33/user/11/details\n       * router.createUrlTree(['details'], {relativeTo: route});\n       *\n       * // navigate to /team/33/user/22\n       * router.createUrlTree(['../22'], {relativeTo: route});\n       *\n       * // navigate to /team/44/user/22\n       * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n       * ```\n       */\n    Router.prototype.createUrlTree = /**\n       * Applies an array of commands to the current url tree and creates a new url tree.\n       *\n       * When given an activate route, applies the given commands starting from the route.\n       * When not given a route, applies the given command starting from the root.\n       *\n       * ### Usage\n       *\n       * ```\n       * // create /team/33/user/11\n       * router.createUrlTree(['/team', 33, 'user', 11]);\n       *\n       * // create /team/33;expand=true/user/11\n       * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n       *\n       * // you can collapse static segments like this (this works only with the first passed-in value):\n       * router.createUrlTree(['/team/33/user', userId]);\n       *\n       * // If the first segment can contain slashes, and you do not want the router to split it, you\n       * // can do the following:\n       *\n       * router.createUrlTree([{segmentPath: '/one/two'}]);\n       *\n       * // create /team/33/(user/11//right:chat)\n       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n       *\n       * // remove the right secondary node\n       * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n       *\n       * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n       *\n       * // navigate to /team/33/user/11/details\n       * router.createUrlTree(['details'], {relativeTo: route});\n       *\n       * // navigate to /team/33/user/22\n       * router.createUrlTree(['../22'], {relativeTo: route});\n       *\n       * // navigate to /team/44/user/22\n       * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n       * ```\n       */\n    function (commands, navigationExtras) {\n        if (navigationExtras === void 0) { navigationExtras = {}; }\n        var relativeTo = navigationExtras.relativeTo, queryParams = navigationExtras.queryParams, fragment = navigationExtras.fragment, preserveQueryParams = navigationExtras.preserveQueryParams, queryParamsHandling = navigationExtras.queryParamsHandling, preserveFragment = navigationExtras.preserveFragment;\n        if (core.isDevMode() && preserveQueryParams && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        var a = relativeTo || this.routerState.root;\n        var f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n        var q = null;\n        if (queryParamsHandling) {\n            switch (queryParamsHandling) {\n                case 'merge':\n                    q = tslib_1.__assign({}, this.currentUrlTree.queryParams, queryParams);\n                    break;\n                case 'preserve':\n                    q = this.currentUrlTree.queryParams;\n                    break;\n                default:\n                    q = queryParams || null;\n            }\n        }\n        else {\n            q = preserveQueryParams ? this.currentUrlTree.queryParams : queryParams || null;\n        }\n        if (q !== null) {\n            q = this.removeEmptyProps(q);\n        }\n        return createUrlTree(a, this.currentUrlTree, commands, (q), (f));\n    };\n    /**\n     * Navigate based on the provided url. This navigation is always absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n     * and does not apply any delta to the current one.\n     */\n    /**\n       * Navigate based on the provided url. This navigation is always absolute.\n       *\n       * Returns a promise that:\n       * - resolves to 'true' when navigation succeeds,\n       * - resolves to 'false' when navigation fails,\n       * - is rejected when an error happens.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.navigateByUrl(\"/team/33/user/11\");\n       *\n       * // Navigate without updating the URL\n       * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n       * ```\n       *\n       * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n       * and does not apply any delta to the current one.\n       */\n    Router.prototype.navigateByUrl = /**\n       * Navigate based on the provided url. This navigation is always absolute.\n       *\n       * Returns a promise that:\n       * - resolves to 'true' when navigation succeeds,\n       * - resolves to 'false' when navigation fails,\n       * - is rejected when an error happens.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.navigateByUrl(\"/team/33/user/11\");\n       *\n       * // Navigate without updating the URL\n       * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n       * ```\n       *\n       * In opposite to `navigate`, `navigateByUrl` takes a whole URL\n       * and does not apply any delta to the current one.\n       */\n    function (url, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        var urlTree = url instanceof UrlTree ? url : this.parseUrl(url);\n        var mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n        return this.scheduleNavigation(mergedTree, 'imperative', null, extras);\n    };\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * Returns a promise that:\n     * - resolves to 'true' when navigation succeeds,\n     * - resolves to 'false' when navigation fails,\n     * - is rejected when an error happens.\n     *\n     * ### Usage\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n     * URL.\n     */\n    /**\n       * Navigate based on the provided array of commands and a starting point.\n       * If no starting route is provided, the navigation is absolute.\n       *\n       * Returns a promise that:\n       * - resolves to 'true' when navigation succeeds,\n       * - resolves to 'false' when navigation fails,\n       * - is rejected when an error happens.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n       *\n       * // Navigate without updating the URL\n       * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n       * ```\n       *\n       * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n       * URL.\n       */\n    Router.prototype.navigate = /**\n       * Navigate based on the provided array of commands and a starting point.\n       * If no starting route is provided, the navigation is absolute.\n       *\n       * Returns a promise that:\n       * - resolves to 'true' when navigation succeeds,\n       * - resolves to 'false' when navigation fails,\n       * - is rejected when an error happens.\n       *\n       * ### Usage\n       *\n       * ```\n       * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n       *\n       * // Navigate without updating the URL\n       * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n       * ```\n       *\n       * In opposite to `navigateByUrl`, `navigate` always takes a delta that is applied to the current\n       * URL.\n       */\n    function (commands, extras) {\n        if (extras === void 0) { extras = { skipLocationChange: false }; }\n        validateCommands(commands);\n        return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    };\n    /** Serializes a `UrlTree` into a string */\n    /** Serializes a `UrlTree` into a string */\n    Router.prototype.serializeUrl = /** Serializes a `UrlTree` into a string */\n    function (url) { return this.urlSerializer.serialize(url); };\n    /** Parses a string into a `UrlTree` */\n    /** Parses a string into a `UrlTree` */\n    Router.prototype.parseUrl = /** Parses a string into a `UrlTree` */\n    function (url) { return this.urlSerializer.parse(url); };\n    /** Returns whether the url is activated */\n    /** Returns whether the url is activated */\n    Router.prototype.isActive = /** Returns whether the url is activated */\n    function (url, exact) {\n        if (url instanceof UrlTree) {\n            return containsTree(this.currentUrlTree, url, exact);\n        }\n        var urlTree = this.urlSerializer.parse(url);\n        return containsTree(this.currentUrlTree, urlTree, exact);\n    };\n    Router.prototype.removeEmptyProps = function (params) {\n        return Object.keys(params).reduce(function (result, key) {\n            var value = params[key];\n            if (value !== null && value !== undefined) {\n                result[key] = value;\n            }\n            return result;\n        }, {});\n    };\n    Router.prototype.processNavigations = function () {\n        var _this = this;\n        this.navigations\n            .pipe(operators.concatMap(function (nav) {\n            if (nav) {\n                _this.executeScheduledNavigation(nav);\n                // a failed navigation should not stop the router from processing\n                // further navigations => the catch\n                return nav.promise.catch(function () { });\n            }\n            else {\n                return rxjs.of(null);\n            }\n        }))\n            .subscribe(function () { });\n    };\n    Router.prototype.scheduleNavigation = function (rawUrl, source, state, extras) {\n        var lastNavigation = this.navigations.value;\n        // If the user triggers a navigation imperatively (e.g., by using navigateByUrl),\n        // and that navigation results in 'replaceState' that leads to the same URL,\n        // we should skip those.\n        if (lastNavigation && source !== 'imperative' && lastNavigation.source === 'imperative' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a popstate was emitted first.\n        if (lastNavigation && source == 'hashchange' && lastNavigation.source === 'popstate' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        // Because of a bug in IE and Edge, the location class fires two events (popstate and\n        // hashchange) every single time. The second one should be ignored. Otherwise, the URL will\n        // flicker. Handles the case when a hashchange was emitted first.\n        if (lastNavigation && source == 'popstate' && lastNavigation.source === 'hashchange' &&\n            lastNavigation.rawUrl.toString() === rawUrl.toString()) {\n            return Promise.resolve(true); // return value is not used\n        }\n        var resolve = null;\n        var reject = null;\n        var promise = new Promise(function (res, rej) {\n            resolve = res;\n            reject = rej;\n        });\n        var id = ++this.navigationId;\n        this.navigations.next({ id: id, source: source, state: state, rawUrl: rawUrl, extras: extras, resolve: resolve, reject: reject, promise: promise });\n        // Make sure that the error is propagated even though `processNavigations` catch\n        // handler does not rethrow\n        return promise.catch(function (e) { return Promise.reject(e); });\n    };\n    Router.prototype.executeScheduledNavigation = function (_a) {\n        var _this = this;\n        var id = _a.id, rawUrl = _a.rawUrl, extras = _a.extras, resolve = _a.resolve, reject = _a.reject, source = _a.source, state = _a.state;\n        var url = this.urlHandlingStrategy.extract(rawUrl);\n        var urlTransition = !this.navigated || url.toString() !== this.currentUrlTree.toString();\n        if ((this.onSameUrlNavigation === 'reload' ? true : urlTransition) &&\n            this.urlHandlingStrategy.shouldProcessUrl(rawUrl)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, !!extras.skipLocationChange, !!extras.replaceUrl, id, null);\n            })\n                .then(resolve, reject);\n            // we cannot process the current URL, but we could process the previous one =>\n            // we need to do some cleanup\n        }\n        else if (urlTransition && this.rawUrlTree &&\n            this.urlHandlingStrategy.shouldProcessUrl(this.rawUrlTree)) {\n            this.events\n                .next(new NavigationStart(id, this.serializeUrl(url), source, state));\n            Promise.resolve()\n                .then(function (_) {\n                return _this.runNavigate(url, rawUrl, false, false, id, createEmptyState(url, _this.rootComponentType).snapshot);\n            })\n                .then(resolve, reject);\n        }\n        else {\n            this.rawUrlTree = rawUrl;\n            resolve(null);\n        }\n    };\n    Router.prototype.runNavigate = function (url, rawUrl, skipLocationChange, replaceUrl, id, precreatedState) {\n        var _this = this;\n        if (id !== this.navigationId) {\n            this.events\n                .next(new NavigationCancel(id, this.serializeUrl(url), \"Navigation ID \" + id + \" is not equal to the current navigation id \" + this.navigationId));\n            return Promise.resolve(false);\n        }\n        return new Promise(function (resolvePromise, rejectPromise) {\n            // create an observable of the url and route state snapshot\n            // this operation do not result in any side effects\n            var urlAndSnapshot$;\n            if (!precreatedState) {\n                var moduleInjector = _this.ngModule.injector;\n                var redirectsApplied$ = applyRedirects(moduleInjector, _this.configLoader, _this.urlSerializer, url, _this.config);\n                urlAndSnapshot$ = redirectsApplied$.pipe(operators.mergeMap(function (appliedUrl) {\n                    return recognize(_this.rootComponentType, _this.config, appliedUrl, _this.serializeUrl(appliedUrl), _this.paramsInheritanceStrategy)\n                        .pipe(operators.map(function (snapshot) {\n                        _this.events\n                            .next(new RoutesRecognized(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                        return { appliedUrl: appliedUrl, snapshot: snapshot };\n                    }));\n                }));\n            }\n            else {\n                urlAndSnapshot$ = rxjs.of({ appliedUrl: url, snapshot: precreatedState });\n            }\n            var beforePreactivationDone$ = urlAndSnapshot$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean')\n                    return rxjs.of(p);\n                return _this.hooks.beforePreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n            }));\n            // run preactivation: guards and data resolvers\n            var preActivation;\n            var preactivationSetup$ = beforePreactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean')\n                    return p;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                var moduleInjector = _this.ngModule.injector;\n                preActivation = new PreActivation(snapshot, _this.routerState.snapshot, moduleInjector, function (evt) { return _this.triggerEvent(evt); });\n                preActivation.initialize(_this.rootContexts);\n                return { appliedUrl: appliedUrl, snapshot: snapshot };\n            }));\n            var preactivationCheckGuards$ = preactivationSetup$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot;\n                _this.triggerEvent(new GuardsCheckStart(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot));\n                return preActivation.checkGuards().pipe(operators.map(function (shouldActivate) {\n                    _this.triggerEvent(new GuardsCheckEnd(id, _this.serializeUrl(url), _this.serializeUrl(appliedUrl), snapshot, shouldActivate));\n                    return { appliedUrl: appliedUrl, snapshot: snapshot, shouldActivate: shouldActivate };\n                }));\n            }));\n            var preactivationResolveData$ = preactivationCheckGuards$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                if (p.shouldActivate && preActivation.isActivating()) {\n                    _this.triggerEvent(new ResolveStart(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                    return preActivation.resolveData(_this.paramsInheritanceStrategy).pipe(operators.map(function () {\n                        _this.triggerEvent(new ResolveEnd(id, _this.serializeUrl(url), _this.serializeUrl(p.appliedUrl), p.snapshot));\n                        return p;\n                    }));\n                }\n                else {\n                    return rxjs.of(p);\n                }\n            }));\n            var preactivationDone$ = preactivationResolveData$.pipe(operators.mergeMap(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return rxjs.of(false);\n                return _this.hooks.afterPreactivation(p.snapshot).pipe(operators.map(function () { return p; }));\n            }));\n            // create router state\n            // this operation has side effects => route state is being affected\n            var routerState$ = preactivationDone$.pipe(operators.map(function (p) {\n                if (typeof p === 'boolean' || _this.navigationId !== id)\n                    return false;\n                var appliedUrl = p.appliedUrl, snapshot = p.snapshot, shouldActivate = p.shouldActivate;\n                if (shouldActivate) {\n                    var state = createRouterState(_this.routeReuseStrategy, snapshot, _this.routerState);\n                    return { appliedUrl: appliedUrl, state: state, shouldActivate: shouldActivate };\n                }\n                else {\n                    return { appliedUrl: appliedUrl, state: null, shouldActivate: shouldActivate };\n                }\n            }));\n            _this.activateRoutes(routerState$, _this.routerState, _this.currentUrlTree, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise);\n        });\n    };\n    /**\n     * Performs the logic of activating routes. This is a synchronous process by default. While this\n     * is a private method, it could be overridden to make activation asynchronous.\n     */\n    /**\n       * Performs the logic of activating routes. This is a synchronous process by default. While this\n       * is a private method, it could be overridden to make activation asynchronous.\n       */\n    Router.prototype.activateRoutes = /**\n       * Performs the logic of activating routes. This is a synchronous process by default. While this\n       * is a private method, it could be overridden to make activation asynchronous.\n       */\n    function (state, storedState, storedUrl, id, url, rawUrl, skipLocationChange, replaceUrl, resolvePromise, rejectPromise) {\n        var _this = this;\n        // applied the new router state\n        // this operation has side effects\n        var navigationIsSuccessful;\n        state\n            .forEach(function (p) {\n            if (typeof p === 'boolean' || !p.shouldActivate || id !== _this.navigationId || !p.state) {\n                navigationIsSuccessful = false;\n                return;\n            }\n            var appliedUrl = p.appliedUrl, state = p.state;\n            _this.currentUrlTree = appliedUrl;\n            _this.rawUrlTree = _this.urlHandlingStrategy.merge(_this.currentUrlTree, rawUrl);\n            _this.routerState = state;\n            if (!skipLocationChange) {\n                var path = _this.urlSerializer.serialize(_this.rawUrlTree);\n                if (_this.location.isCurrentPathEqualTo(path) || replaceUrl) {\n                    _this.location.replaceState(path, '', { navigationId: id });\n                }\n                else {\n                    _this.location.go(path, '', { navigationId: id });\n                }\n            }\n            new ActivateRoutes(_this.routeReuseStrategy, state, storedState, function (evt) { return _this.triggerEvent(evt); })\n                .activate(_this.rootContexts);\n            navigationIsSuccessful = true;\n        })\n            .then(function () {\n            if (navigationIsSuccessful) {\n                _this.navigated = true;\n                _this.lastSuccessfulId = id;\n                _this.events\n                    .next(new NavigationEnd(id, _this.serializeUrl(url), _this.serializeUrl(_this.currentUrlTree)));\n                resolvePromise(true);\n            }\n            else {\n                _this.resetUrlToCurrentUrlTree();\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), ''));\n                resolvePromise(false);\n            }\n        }, function (e) {\n            if (isNavigationCancelingError(e)) {\n                _this.navigated = true;\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationCancel(id, _this.serializeUrl(url), e.message));\n                resolvePromise(false);\n            }\n            else {\n                _this.resetStateAndUrl(storedState, storedUrl, rawUrl);\n                _this.events\n                    .next(new NavigationError(id, _this.serializeUrl(url), e));\n                try {\n                    resolvePromise(_this.errorHandler(e));\n                }\n                catch (ee) {\n                    rejectPromise(ee);\n                }\n            }\n        });\n    };\n    Router.prototype.resetStateAndUrl = function (storedState, storedUrl, rawUrl) {\n        this.routerState = storedState;\n        this.currentUrlTree = storedUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, rawUrl);\n        this.resetUrlToCurrentUrlTree();\n    };\n    Router.prototype.resetUrlToCurrentUrlTree = function () {\n        this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', { navigationId: this.lastSuccessfulId });\n    };\n    return Router;\n}());\nvar ActivateRoutes = /** @class */ (function () {\n    function ActivateRoutes(routeReuseStrategy, futureState, currState, forwardEvent) {\n        this.routeReuseStrategy = routeReuseStrategy;\n        this.futureState = futureState;\n        this.currState = currState;\n        this.forwardEvent = forwardEvent;\n    }\n    ActivateRoutes.prototype.activate = function (parentContexts) {\n        var futureRoot = this.futureState._root;\n        var currRoot = this.currState ? this.currState._root : null;\n        this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n        advanceActivatedRoute(this.futureState.root);\n        this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n    };\n    // De-activate the child route that are not re-used for the future state\n    // De-activate the child route that are not re-used for the future state\n    ActivateRoutes.prototype.deactivateChildRoutes = \n    // De-activate the child route that are not re-used for the future state\n    function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        // Recurse on the routes active in the future state to de-activate deeper children\n        futureNode.children.forEach(function (futureChild) {\n            var childOutletName = futureChild.value.outlet;\n            _this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n            delete children[childOutletName];\n        });\n        // De-activate the routes that will not be re-used\n        forEach(children, function (v, childName) {\n            _this.deactivateRouteAndItsChildren(v, contexts);\n        });\n    };\n    ActivateRoutes.prototype.deactivateRoutes = function (futureNode, currNode, parentContext) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        if (future === curr) {\n            // Reusing the node, check to see if the children need to be de-activated\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContext.getContext(future.outlet);\n                if (context) {\n                    this.deactivateChildRoutes(futureNode, currNode, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.deactivateChildRoutes(futureNode, currNode, parentContext);\n            }\n        }\n        else {\n            if (curr) {\n                // Deactivate the current route which will not be re-used\n                this.deactivateRouteAndItsChildren(currNode, parentContext);\n            }\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndItsChildren = function (route, parentContexts) {\n        if (this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n            this.detachAndStoreRouteSubtree(route, parentContexts);\n        }\n        else {\n            this.deactivateRouteAndOutlet(route, parentContexts);\n        }\n    };\n    ActivateRoutes.prototype.detachAndStoreRouteSubtree = function (route, parentContexts) {\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context && context.outlet) {\n            var componentRef = context.outlet.detach();\n            var contexts = context.children.onOutletDeactivated();\n            this.routeReuseStrategy.store(route.value.snapshot, { componentRef: componentRef, route: route, contexts: contexts });\n        }\n    };\n    ActivateRoutes.prototype.deactivateRouteAndOutlet = function (route, parentContexts) {\n        var _this = this;\n        var context = parentContexts.getContext(route.value.outlet);\n        if (context) {\n            var children = nodeChildrenAsMap(route);\n            var contexts_1 = route.value.component ? context.children : parentContexts;\n            forEach(children, function (v, k) { return _this.deactivateRouteAndItsChildren(v, contexts_1); });\n            if (context.outlet) {\n                // Destroy the component\n                context.outlet.deactivate();\n                // Destroy the contexts for all the outlets that were in the component\n                context.children.onOutletDeactivated();\n            }\n        }\n    };\n    ActivateRoutes.prototype.activateChildRoutes = function (futureNode, currNode, contexts) {\n        var _this = this;\n        var children = nodeChildrenAsMap(currNode);\n        futureNode.children.forEach(function (c) {\n            _this.activateRoutes(c, children[c.value.outlet], contexts);\n            _this.forwardEvent(new ActivationEnd(c.value.snapshot));\n        });\n        if (futureNode.children.length) {\n            this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n        }\n    };\n    ActivateRoutes.prototype.activateRoutes = function (futureNode, currNode, parentContexts) {\n        var future = futureNode.value;\n        var curr = currNode ? currNode.value : null;\n        advanceActivatedRoute(future);\n        // reusing the node\n        if (future === curr) {\n            if (future.component) {\n                // If we have a normal route, we need to go through an outlet.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                this.activateChildRoutes(futureNode, currNode, context.children);\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, currNode, parentContexts);\n            }\n        }\n        else {\n            if (future.component) {\n                // if we have a normal route, we need to place the component into the outlet and recurse.\n                var context = parentContexts.getOrCreateContext(future.outlet);\n                if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n                    var stored = this.routeReuseStrategy.retrieve(future.snapshot);\n                    this.routeReuseStrategy.store(future.snapshot, null);\n                    context.children.onOutletReAttached(stored.contexts);\n                    context.attachRef = stored.componentRef;\n                    context.route = stored.route.value;\n                    if (context.outlet) {\n                        // Attach right away when the outlet has already been instantiated\n                        // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n                        context.outlet.attach(stored.componentRef, stored.route.value);\n                    }\n                    advanceActivatedRouteNodeAndItsChildren(stored.route);\n                }\n                else {\n                    var config = parentLoadedConfig(future.snapshot);\n                    var cmpFactoryResolver = config ? config.module.componentFactoryResolver : null;\n                    context.route = future;\n                    context.resolver = cmpFactoryResolver;\n                    if (context.outlet) {\n                        // Activate the outlet when it has already been instantiated\n                        // Otherwise it will get activated from its `ngOnInit` when instantiated\n                        context.outlet.activateWith(future, cmpFactoryResolver);\n                    }\n                    this.activateChildRoutes(futureNode, null, context.children);\n                }\n            }\n            else {\n                // if we have a componentless route, we recurse but keep the same outlet map.\n                this.activateChildRoutes(futureNode, null, parentContexts);\n            }\n        }\n    };\n    return ActivateRoutes;\n}());\nfunction advanceActivatedRouteNodeAndItsChildren(node) {\n    advanceActivatedRoute(node.value);\n    node.children.forEach(advanceActivatedRouteNodeAndItsChildren);\n}\nfunction parentLoadedConfig(snapshot) {\n    for (var s = snapshot.parent; s; s = s.parent) {\n        var route = s.routeConfig;\n        if (route && route._loadedConfig)\n            return route._loadedConfig;\n        if (route && route.component)\n            return null;\n    }\n    return null;\n}\nfunction validateCommands(commands) {\n    for (var i = 0; i < commands.length; i++) {\n        var cmd = commands[i];\n        if (cmd == null) {\n            throw new Error(\"The requested path contains \" + cmd + \" segment at index \" + i);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * Consider the following route configuration:\n * `[{ path: 'user/:name', component: UserCmp }]`.\n * When linking to this `user/:name` route, you use the `RouterLink` directive.\n *\n * If the link is static, you can use the directive as follows:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * If you use dynamic values to generate the link, you can pass an array of path\n * segments, followed by the params for each segment.\n *\n * For instance `['/team', teamId, 'user', userName, {details: true}]`\n * means that we want to generate a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one\n * (e.g., `['/team/11/user', userName, {details: true}]`).\n *\n * The first segment name can be prepended with `/`, `./`, or `../`:\n * * If the first segment begins with `/`, the router will look up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router will\n *   instead look in the children of the current activated route.\n * * And if the first segment begins with `../`, the router will go up one level.\n *\n * You can set query params and fragment as follows:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * RouterLink will use these to generate this link: `/user/bob#education?debug=true`.\n *\n * (Deprecated in v4.0.0 use `queryParamsHandling` instead) You can also tell the\n * directive to preserve the current query params and fragment:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" preserveQueryParams preserveFragment>\n *   link to user component\n * </a>\n * ```\n *\n * You can tell the directive to how to handle queryParams, available options are:\n *  - `'merge'`: merge the queryParams into the current queryParams\n *  - `'preserve'`: preserve the current queryParams\n *  - default/`''`: use the queryParams only\n *\n * Same options for {@link NavigationExtras#queryParamsHandling\n * NavigationExtras#queryParamsHandling}.\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * The router link directive always treats the provided input as a delta to the current url.\n *\n * For instance, if the current url is `/user/(box//aux:team)`.\n *\n * Then the following link `<a [routerLink]=\"['/user/jim']\">Jim</a>` will generate the link\n * `/user/(jim//aux:team)`.\n *\n * See {@link Router#createUrlTree createUrlTree} for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLink = /** @class */ (function () {\n    function RouterLink(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        this.commands = [];\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    Object.defineProperty(RouterLink.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLink.prototype, \"preserveQueryParams\", {\n        set: /**\n           * @deprecated 4.0.0 use `queryParamsHandling` instead.\n           */\n        function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.prototype.onClick = function () {\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    };\n    Object.defineProperty(RouterLink.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLink.decorators = [\n        { type: core.Directive, args: [{ selector: ':not(a)[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLink.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: undefined, decorators: [{ type: core.Attribute, args: ['tabindex',] },] },\n        { type: core.Renderer2, },\n        { type: core.ElementRef, },\n    ]; };\n    RouterLink.propDecorators = {\n        \"queryParams\": [{ type: core.Input },],\n        \"fragment\": [{ type: core.Input },],\n        \"queryParamsHandling\": [{ type: core.Input },],\n        \"preserveFragment\": [{ type: core.Input },],\n        \"skipLocationChange\": [{ type: core.Input },],\n        \"replaceUrl\": [{ type: core.Input },],\n        \"routerLink\": [{ type: core.Input },],\n        \"preserveQueryParams\": [{ type: core.Input },],\n        \"onClick\": [{ type: core.HostListener, args: ['click',] },],\n    };\n    return RouterLink;\n}());\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkWithHref = /** @class */ (function () {\n    function RouterLinkWithHref(router, route, locationStrategy) {\n        var _this = this;\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.commands = [];\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    Object.defineProperty(RouterLinkWithHref.prototype, \"routerLink\", {\n        set: function (commands) {\n            if (commands != null) {\n                this.commands = Array.isArray(commands) ? commands : [commands];\n            }\n            else {\n                this.commands = [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterLinkWithHref.prototype, \"preserveQueryParams\", {\n        set: function (value) {\n            if (core.isDevMode() && console && console.warn) {\n                console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n            }\n            this.preserve = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.prototype.ngOnChanges = function (changes) { this.updateTargetUrlAndHref(); };\n    RouterLinkWithHref.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkWithHref.prototype.onClick = function (button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n            return true;\n        }\n        var extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    };\n    RouterLinkWithHref.prototype.updateTargetUrlAndHref = function () {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    };\n    Object.defineProperty(RouterLinkWithHref.prototype, \"urlTree\", {\n        get: function () {\n            return this.router.createUrlTree(this.commands, {\n                relativeTo: this.route,\n                queryParams: this.queryParams,\n                fragment: this.fragment,\n                preserveQueryParams: attrBoolValue(this.preserve),\n                queryParamsHandling: this.queryParamsHandling,\n                preserveFragment: attrBoolValue(this.preserveFragment),\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkWithHref.decorators = [\n        { type: core.Directive, args: [{ selector: 'a[routerLink]' },] }\n    ];\n    /** @nocollapse */\n    RouterLinkWithHref.ctorParameters = function () { return [\n        { type: Router, },\n        { type: ActivatedRoute, },\n        { type: common.LocationStrategy, },\n    ]; };\n    RouterLinkWithHref.propDecorators = {\n        \"target\": [{ type: core.HostBinding, args: ['attr.target',] }, { type: core.Input },],\n        \"queryParams\": [{ type: core.Input },],\n        \"fragment\": [{ type: core.Input },],\n        \"queryParamsHandling\": [{ type: core.Input },],\n        \"preserveFragment\": [{ type: core.Input },],\n        \"skipLocationChange\": [{ type: core.Input },],\n        \"replaceUrl\": [{ type: core.Input },],\n        \"href\": [{ type: core.HostBinding },],\n        \"routerLink\": [{ type: core.Input },],\n        \"preserveQueryParams\": [{ type: core.Input },],\n        \"onClick\": [{ type: core.HostListener, args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey'],] },],\n    };\n    return RouterLinkWithHref;\n}());\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n * @description\n *\n * Lets you add a CSS class to an element when the link's route becomes active.\n *\n * This directive lets you add a CSS class to an element when the link's route\n * becomes active.\n *\n * Consider the following example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * When the url is either '/user' or '/user/bob', the active-link class will\n * be added to the `a` tag. If the url changes, the class will be removed.\n *\n * You can set more than one class, as follows:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * You can configure RouterLinkActive by passing `exact: true`. This will add the classes\n * only when the url matches the link exactly.\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * You can assign the RouterLinkActive instance to a template variable and directly check\n * the `isActive` status.\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * Finally, you can apply the RouterLinkActive directive to an ancestor of a RouterLink.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * This will set the active-link class on the div tag if the url is either '/user/jim' or\n * '/user/bob'.\n *\n * @ngModule RouterModule\n *\n *\n */\nvar RouterLinkActive = /** @class */ (function () {\n    function RouterLinkActive(router, element, renderer, cdr) {\n        var _this = this;\n        this.router = router;\n        this.element = element;\n        this.renderer = renderer;\n        this.cdr = cdr;\n        this.classes = [];\n        this.isActive = false;\n        this.routerLinkActiveOptions = { exact: false };\n        this.subscription = router.events.subscribe(function (s) {\n            if (s instanceof NavigationEnd) {\n                _this.update();\n            }\n        });\n    }\n    RouterLinkActive.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.links.changes.subscribe(function (_) { return _this.update(); });\n        this.linksWithHrefs.changes.subscribe(function (_) { return _this.update(); });\n        this.update();\n    };\n    Object.defineProperty(RouterLinkActive.prototype, \"routerLinkActive\", {\n        set: function (data) {\n            var classes = Array.isArray(data) ? data : data.split(' ');\n            this.classes = classes.filter(function (c) { return !!c; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RouterLinkActive.prototype.ngOnChanges = function (changes) { this.update(); };\n    RouterLinkActive.prototype.ngOnDestroy = function () { this.subscription.unsubscribe(); };\n    RouterLinkActive.prototype.update = function () {\n        var _this = this;\n        if (!this.links || !this.linksWithHrefs || !this.router.navigated)\n            return;\n        Promise.resolve().then(function () {\n            var hasActiveLinks = _this.hasActiveLinks();\n            if (_this.isActive !== hasActiveLinks) {\n                _this.isActive = hasActiveLinks;\n                _this.classes.forEach(function (c) {\n                    if (hasActiveLinks) {\n                        _this.renderer.addClass(_this.element.nativeElement, c);\n                    }\n                    else {\n                        _this.renderer.removeClass(_this.element.nativeElement, c);\n                    }\n                });\n            }\n        });\n    };\n    RouterLinkActive.prototype.isLinkActive = function (router) {\n        var _this = this;\n        return function (link) {\n            return router.isActive(link.urlTree, _this.routerLinkActiveOptions.exact);\n        };\n    };\n    RouterLinkActive.prototype.hasActiveLinks = function () {\n        return this.links.some(this.isLinkActive(this.router)) ||\n            this.linksWithHrefs.some(this.isLinkActive(this.router));\n    };\n    RouterLinkActive.decorators = [\n        { type: core.Directive, args: [{\n                    selector: '[routerLinkActive]',\n                    exportAs: 'routerLinkActive',\n                },] }\n    ];\n    /** @nocollapse */\n    RouterLinkActive.ctorParameters = function () { return [\n        { type: Router, },\n        { type: core.ElementRef, },\n        { type: core.Renderer2, },\n        { type: core.ChangeDetectorRef, },\n    ]; };\n    RouterLinkActive.propDecorators = {\n        \"links\": [{ type: core.ContentChildren, args: [RouterLink, { descendants: true },] },],\n        \"linksWithHrefs\": [{ type: core.ContentChildren, args: [RouterLinkWithHref, { descendants: true },] },],\n        \"routerLinkActiveOptions\": [{ type: core.Input },],\n        \"routerLinkActive\": [{ type: core.Input },],\n    };\n    return RouterLinkActive;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Store contextual information about a `RouterOutlet`\n *\n *\n */\nvar OutletContext = /** @class */ (function () {\n    function OutletContext() {\n        this.outlet = null;\n        this.route = null;\n        this.resolver = null;\n        this.children = new ChildrenOutletContexts();\n        this.attachRef = null;\n    }\n    return OutletContext;\n}());\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n *\n */\nvar ChildrenOutletContexts = /** @class */ (function () {\n    function ChildrenOutletContexts() {\n        // contexts for child outlets, by name.\n        this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    /** Called when a `RouterOutlet` directive is instantiated */\n    ChildrenOutletContexts.prototype.onChildOutletCreated = /** Called when a `RouterOutlet` directive is instantiated */\n    function (childName, outlet) {\n        var context = this.getOrCreateContext(childName);\n        context.outlet = outlet;\n        this.contexts.set(childName, context);\n    };\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    /**\n       * Called when a `RouterOutlet` directive is destroyed.\n       * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n       * re-created later.\n       */\n    ChildrenOutletContexts.prototype.onChildOutletDestroyed = /**\n       * Called when a `RouterOutlet` directive is destroyed.\n       * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n       * re-created later.\n       */\n    function (childName) {\n        var context = this.getContext(childName);\n        if (context) {\n            context.outlet = null;\n        }\n    };\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    /**\n       * Called when the corresponding route is deactivated during navigation.\n       * Because the component get destroyed, all children outlet are destroyed.\n       */\n    ChildrenOutletContexts.prototype.onOutletDeactivated = /**\n       * Called when the corresponding route is deactivated during navigation.\n       * Because the component get destroyed, all children outlet are destroyed.\n       */\n    function () {\n        var contexts = this.contexts;\n        this.contexts = new Map();\n        return contexts;\n    };\n    ChildrenOutletContexts.prototype.onOutletReAttached = function (contexts) { this.contexts = contexts; };\n    ChildrenOutletContexts.prototype.getOrCreateContext = function (childName) {\n        var context = this.getContext(childName);\n        if (!context) {\n            context = new OutletContext();\n            this.contexts.set(childName, context);\n        }\n        return context;\n    };\n    ChildrenOutletContexts.prototype.getContext = function (childName) { return this.contexts.get(childName) || null; };\n    return ChildrenOutletContexts;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * A router outlet will emit an activate event any time a new component is being instantiated,\n * and a deactivate event when it is being destroyed.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'></router-outlet>\n * ```\n * @ngModule RouterModule\n *\n *\n */\nvar RouterOutlet = /** @class */ (function () {\n    function RouterOutlet(parentContexts, location, resolver, name, changeDetector) {\n        this.parentContexts = parentContexts;\n        this.location = location;\n        this.resolver = resolver;\n        this.changeDetector = changeDetector;\n        this.activated = null;\n        this._activatedRoute = null;\n        this.activateEvents = new core.EventEmitter();\n        this.deactivateEvents = new core.EventEmitter();\n        this.name = name || PRIMARY_OUTLET;\n        parentContexts.onChildOutletCreated(this.name, this);\n    }\n    RouterOutlet.prototype.ngOnDestroy = function () { this.parentContexts.onChildOutletDestroyed(this.name); };\n    RouterOutlet.prototype.ngOnInit = function () {\n        if (!this.activated) {\n            // If the outlet was not instantiated at the time the route got activated we need to populate\n            // the outlet when it is initialized (ie inside a NgIf)\n            var context = this.parentContexts.getContext(this.name);\n            if (context && context.route) {\n                if (context.attachRef) {\n                    // `attachRef` is populated when there is an existing component to mount\n                    this.attach(context.attachRef, context.route);\n                }\n                else {\n                    // otherwise the component defined in the configuration is created\n                    this.activateWith(context.route, context.resolver || null);\n                }\n            }\n        }\n    };\n    Object.defineProperty(RouterOutlet.prototype, \"isActivated\", {\n        get: function () { return !!this.activated; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"component\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this.activated.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRoute\", {\n        get: function () {\n            if (!this.activated)\n                throw new Error('Outlet is not activated');\n            return this._activatedRoute;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RouterOutlet.prototype, \"activatedRouteData\", {\n        get: function () {\n            if (this._activatedRoute) {\n                return this._activatedRoute.snapshot.data;\n            }\n            return {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    /**\n       * Called when the `RouteReuseStrategy` instructs to detach the subtree\n       */\n    RouterOutlet.prototype.detach = /**\n       * Called when the `RouteReuseStrategy` instructs to detach the subtree\n       */\n    function () {\n        if (!this.activated)\n            throw new Error('Outlet is not activated');\n        this.location.detach();\n        var cmp = this.activated;\n        this.activated = null;\n        this._activatedRoute = null;\n        return cmp;\n    };\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    /**\n       * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n       */\n    RouterOutlet.prototype.attach = /**\n       * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n       */\n    function (ref, activatedRoute) {\n        this.activated = ref;\n        this._activatedRoute = activatedRoute;\n        this.location.insert(ref.hostView);\n    };\n    RouterOutlet.prototype.deactivate = function () {\n        if (this.activated) {\n            var c = this.component;\n            this.activated.destroy();\n            this.activated = null;\n            this._activatedRoute = null;\n            this.deactivateEvents.emit(c);\n        }\n    };\n    RouterOutlet.prototype.activateWith = function (activatedRoute, resolver) {\n        if (this.isActivated) {\n            throw new Error('Cannot activate an already activated outlet');\n        }\n        this._activatedRoute = activatedRoute;\n        var snapshot = activatedRoute._futureSnapshot;\n        var component = snapshot.routeConfig.component;\n        resolver = resolver || this.resolver;\n        var factory = resolver.resolveComponentFactory(component);\n        var childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n        var injector = new OutletInjector(activatedRoute, childContexts, this.location.injector);\n        this.activated = this.location.createComponent(factory, this.location.length, injector);\n        // Calling `markForCheck` to make sure we will run the change detection when the\n        // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n        this.changeDetector.markForCheck();\n        this.activateEvents.emit(this.activated.instance);\n    };\n    RouterOutlet.decorators = [\n        { type: core.Directive, args: [{ selector: 'router-outlet', exportAs: 'outlet' },] }\n    ];\n    /** @nocollapse */\n    RouterOutlet.ctorParameters = function () { return [\n        { type: ChildrenOutletContexts, },\n        { type: core.ViewContainerRef, },\n        { type: core.ComponentFactoryResolver, },\n        { type: undefined, decorators: [{ type: core.Attribute, args: ['name',] },] },\n        { type: core.ChangeDetectorRef, },\n    ]; };\n    RouterOutlet.propDecorators = {\n        \"activateEvents\": [{ type: core.Output, args: ['activate',] },],\n        \"deactivateEvents\": [{ type: core.Output, args: ['deactivate',] },],\n    };\n    return RouterOutlet;\n}());\nvar OutletInjector = /** @class */ (function () {\n    function OutletInjector(route, childContexts, parent) {\n        this.route = route;\n        this.childContexts = childContexts;\n        this.parent = parent;\n    }\n    OutletInjector.prototype.get = function (token, notFoundValue) {\n        if (token === ActivatedRoute) {\n            return this.route;\n        }\n        if (token === ChildrenOutletContexts) {\n            return this.childContexts;\n        }\n        return this.parent.get(token, notFoundValue);\n    };\n    return OutletInjector;\n}());\n\n/**\n*@license\n*Copyright Google Inc. All Rights Reserved.\n*\n*Use of this source code is governed by an MIT-style license that can be\n*found in the LICENSE file at https://angular.io/license\n*/\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @experimental\n */\nvar PreloadingStrategy = /** @class */ (function () {\n    function PreloadingStrategy() {\n    }\n    return PreloadingStrategy;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouteModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @experimental\n */\nvar PreloadAllModules = /** @class */ (function () {\n    function PreloadAllModules() {\n    }\n    PreloadAllModules.prototype.preload = function (route, fn) {\n        return fn().pipe(operators.catchError(function () { return rxjs.of(null); }));\n    };\n    return PreloadAllModules;\n}());\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @experimental\n */\nvar NoPreloading = /** @class */ (function () {\n    function NoPreloading() {\n    }\n    NoPreloading.prototype.preload = function (route, fn) { return rxjs.of(null); };\n    return NoPreloading;\n}());\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n *\n */\nvar RouterPreloader = /** @class */ (function () {\n    function RouterPreloader(router, moduleLoader, compiler, injector, preloadingStrategy) {\n        this.router = router;\n        this.injector = injector;\n        this.preloadingStrategy = preloadingStrategy;\n        var onStartLoad = function (r) { return router.triggerEvent(new RouteConfigLoadStart(r)); };\n        var onEndLoad = function (r) { return router.triggerEvent(new RouteConfigLoadEnd(r)); };\n        this.loader = new RouterConfigLoader(moduleLoader, compiler, onStartLoad, onEndLoad);\n    }\n    RouterPreloader.prototype.setUpPreloading = function () {\n        var _this = this;\n        this.subscription =\n            this.router.events\n                .pipe(operators.filter(function (e) { return e instanceof NavigationEnd; }), operators.concatMap(function () { return _this.preload(); }))\n                .subscribe(function () { });\n    };\n    RouterPreloader.prototype.preload = function () {\n        var ngModule = this.injector.get(core.NgModuleRef);\n        return this.processRoutes(ngModule, this.router.config);\n    };\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    RouterPreloader.prototype.ngOnDestroy = \n    // TODO(jasonaden): This class relies on code external to the class to call setUpPreloading. If\n    // this hasn't been done, ngOnDestroy will fail as this.subscription will be undefined. This\n    // should be refactored.\n    function () { this.subscription.unsubscribe(); };\n    RouterPreloader.prototype.processRoutes = function (ngModule, routes) {\n        var res = [];\n        try {\n            for (var routes_1 = tslib_1.__values(routes), routes_1_1 = routes_1.next(); !routes_1_1.done; routes_1_1 = routes_1.next()) {\n                var route = routes_1_1.value;\n                // we already have the config loaded, just recurse\n                if (route.loadChildren && !route.canLoad && route._loadedConfig) {\n                    var childConfig = route._loadedConfig;\n                    res.push(this.processRoutes(childConfig.module, childConfig.routes));\n                    // no config loaded, fetch the config\n                }\n                else if (route.loadChildren && !route.canLoad) {\n                    res.push(this.preloadConfig(ngModule, route));\n                    // recurse into children\n                }\n                else if (route.children) {\n                    res.push(this.processRoutes(ngModule, route.children));\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (routes_1_1 && !routes_1_1.done && (_a = routes_1.return)) _a.call(routes_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return rxjs.from(res).pipe(operators.mergeAll(), operators.map(function (_) { return void 0; }));\n        var e_1, _a;\n    };\n    RouterPreloader.prototype.preloadConfig = function (ngModule, route) {\n        var _this = this;\n        return this.preloadingStrategy.preload(route, function () {\n            var loaded$ = _this.loader.load(ngModule.injector, route);\n            return loaded$.pipe(operators.mergeMap(function (config) {\n                route._loadedConfig = config;\n                return _this.processRoutes(config.module, config.routes);\n            }));\n        });\n    };\n    RouterPreloader.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterPreloader.ctorParameters = function () { return [\n        { type: Router, },\n        { type: core.NgModuleFactoryLoader, },\n        { type: core.Compiler, },\n        { type: core.Injector, },\n        { type: PreloadingStrategy, },\n    ]; };\n    return RouterPreloader;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @description\n *\n * Contains a list of directives\n *\n *\n */\nvar ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkWithHref, RouterLinkActive];\n/**\n * @description\n *\n * Is used in DI to configure the router.\n *\n *\n */\nvar ROUTER_CONFIGURATION = new core.InjectionToken('ROUTER_CONFIGURATION');\n/**\n * @docsNotRequired\n */\nvar ROUTER_FORROOT_GUARD = new core.InjectionToken('ROUTER_FORROOT_GUARD');\nvar ROUTER_PROVIDERS = [\n    common.Location,\n    { provide: UrlSerializer, useClass: DefaultUrlSerializer },\n    {\n        provide: Router,\n        useFactory: setupRouter,\n        deps: [\n            core.ApplicationRef, UrlSerializer, ChildrenOutletContexts, common.Location, core.Injector,\n            core.NgModuleFactoryLoader, core.Compiler, ROUTES, ROUTER_CONFIGURATION,\n            [UrlHandlingStrategy, new core.Optional()], [RouteReuseStrategy, new core.Optional()]\n        ]\n    },\n    ChildrenOutletContexts,\n    { provide: ActivatedRoute, useFactory: rootRoute, deps: [Router] },\n    { provide: core.NgModuleFactoryLoader, useClass: core.SystemJsNgModuleLoader },\n    RouterPreloader,\n    NoPreloading,\n    PreloadAllModules,\n    { provide: ROUTER_CONFIGURATION, useValue: { enableTracing: false } },\n];\nfunction routerNgProbeToken() {\n    return new core.NgProbeToken('Router', Router);\n}\n/**\n * @usageNotes\n *\n * RouterModule can be imported multiple times: once per lazily-loaded bundle.\n * Since the router deals with a global shared resource--location, we cannot have\n * more than one router service active.\n *\n * That is why there are two ways to create the module: `RouterModule.forRoot` and\n * `RouterModule.forChild`.\n *\n * * `forRoot` creates a module that contains all the directives, the given routes, and the router\n *   service itself.\n * * `forChild` creates a module that contains all the directives and the given routes, but does not\n *   include the router service.\n *\n * When registered at the root, the module should be used as follows\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forRoot(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * For submodules and lazy loaded submodules the module should be used as follows:\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n * @description\n *\n * Adds router directives and providers.\n *\n * Managing state transitions is one of the hardest parts of building applications. This is\n * especially true on the web, where you also need to ensure that the state is reflected in the URL.\n * In addition, we often want to split applications into multiple bundles and load them on demand.\n * Doing this transparently is not trivial.\n *\n * The Angular router solves these problems. Using the router, you can declaratively specify\n * application states, manage state transitions while taking care of the URL, and load bundles on\n * demand.\n *\n * [Read this developer guide](https://angular.io/docs/ts/latest/guide/router.html) to get an\n * overview of how the router should be used.\n *\n *\n */\nvar RouterModule = /** @class */ (function () {\n    // Note: We are injecting the Router so it gets created eagerly...\n    function RouterModule(guard, router) {\n    }\n    /**\n     * Creates a module with all the router providers and directives. It also optionally sets up an\n     * application listener to perform an initial navigation.\n     *\n     * Options (see `ExtraOptions`):\n     * * `enableTracing` makes the router log all its internal events to the console.\n     * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n     * API.\n     * * `initialNavigation` disables the initial navigation.\n     * * `errorHandler` provides a custom error handler.\n     * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n     * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n     * `ExtraOptions` for more details.\n     */\n    /**\n       * Creates a module with all the router providers and directives. It also optionally sets up an\n       * application listener to perform an initial navigation.\n       *\n       * Options (see `ExtraOptions`):\n       * * `enableTracing` makes the router log all its internal events to the console.\n       * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n       * API.\n       * * `initialNavigation` disables the initial navigation.\n       * * `errorHandler` provides a custom error handler.\n       * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n       * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n       * `ExtraOptions` for more details.\n       */\n    RouterModule.forRoot = /**\n       * Creates a module with all the router providers and directives. It also optionally sets up an\n       * application listener to perform an initial navigation.\n       *\n       * Options (see `ExtraOptions`):\n       * * `enableTracing` makes the router log all its internal events to the console.\n       * * `useHash` enables the location strategy that uses the URL fragment instead of the history\n       * API.\n       * * `initialNavigation` disables the initial navigation.\n       * * `errorHandler` provides a custom error handler.\n       * * `preloadingStrategy` configures a preloading strategy (see `PreloadAllModules`).\n       * * `onSameUrlNavigation` configures how the router handles navigation to the current URL. See\n       * `ExtraOptions` for more details.\n       */\n    function (routes, config) {\n        return {\n            ngModule: RouterModule,\n            providers: [\n                ROUTER_PROVIDERS,\n                provideRoutes(routes),\n                {\n                    provide: ROUTER_FORROOT_GUARD,\n                    useFactory: provideForRootGuard,\n                    deps: [[Router, new core.Optional(), new core.SkipSelf()]]\n                },\n                { provide: ROUTER_CONFIGURATION, useValue: config ? config : {} },\n                {\n                    provide: common.LocationStrategy,\n                    useFactory: provideLocationStrategy,\n                    deps: [\n                        common.PlatformLocation, [new core.Inject(common.APP_BASE_HREF), new core.Optional()], ROUTER_CONFIGURATION\n                    ]\n                },\n                {\n                    provide: PreloadingStrategy,\n                    useExisting: config && config.preloadingStrategy ? config.preloadingStrategy :\n                        NoPreloading\n                },\n                { provide: core.NgProbeToken, multi: true, useFactory: routerNgProbeToken },\n                provideRouterInitializer(),\n            ],\n        };\n    };\n    /**\n     * Creates a module with all the router directives and a provider registering routes.\n     */\n    /**\n       * Creates a module with all the router directives and a provider registering routes.\n       */\n    RouterModule.forChild = /**\n       * Creates a module with all the router directives and a provider registering routes.\n       */\n    function (routes) {\n        return { ngModule: RouterModule, providers: [provideRoutes(routes)] };\n    };\n    RouterModule.decorators = [\n        { type: core.NgModule, args: [{ declarations: ROUTER_DIRECTIVES, exports: ROUTER_DIRECTIVES },] }\n    ];\n    /** @nocollapse */\n    RouterModule.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [ROUTER_FORROOT_GUARD,] },] },\n        { type: Router, decorators: [{ type: core.Optional },] },\n    ]; };\n    return RouterModule;\n}());\nfunction provideLocationStrategy(platformLocationStrategy, baseHref, options) {\n    if (options === void 0) { options = {}; }\n    return options.useHash ? new common.HashLocationStrategy(platformLocationStrategy, baseHref) :\n        new common.PathLocationStrategy(platformLocationStrategy, baseHref);\n}\nfunction provideForRootGuard(router) {\n    if (router) {\n        throw new Error(\"RouterModule.forRoot() called twice. Lazy loaded modules should use RouterModule.forChild() instead.\");\n    }\n    return 'guarded';\n}\n/**\n * @description\n *\n * Registers routes.\n *\n * ### Example\n *\n * ```\n * @NgModule({\n *   imports: [RouterModule.forChild(ROUTES)],\n *   providers: [provideRoutes(EXTRA_ROUTES)]\n * })\n * class MyNgModule {}\n * ```\n *\n *\n */\nfunction provideRoutes(routes) {\n    return [\n        { provide: core.ANALYZE_FOR_ENTRY_COMPONENTS, multi: true, useValue: routes },\n        { provide: ROUTES, multi: true, useValue: routes },\n    ];\n}\nfunction setupRouter(ref, urlSerializer, contexts, location, injector, loader, compiler, config, opts, urlHandlingStrategy, routeReuseStrategy) {\n    if (opts === void 0) { opts = {}; }\n    var router = new Router(null, urlSerializer, contexts, location, injector, loader, compiler, flatten(config));\n    if (urlHandlingStrategy) {\n        router.urlHandlingStrategy = urlHandlingStrategy;\n    }\n    if (routeReuseStrategy) {\n        router.routeReuseStrategy = routeReuseStrategy;\n    }\n    if (opts.errorHandler) {\n        router.errorHandler = opts.errorHandler;\n    }\n    if (opts.enableTracing) {\n        var dom_1 = platformBrowser.ɵgetDOM();\n        router.events.subscribe(function (e) {\n            dom_1.logGroup(\"Router Event: \" + e.constructor.name);\n            dom_1.log(e.toString());\n            dom_1.log(e);\n            dom_1.logGroupEnd();\n        });\n    }\n    if (opts.onSameUrlNavigation) {\n        router.onSameUrlNavigation = opts.onSameUrlNavigation;\n    }\n    if (opts.paramsInheritanceStrategy) {\n        router.paramsInheritanceStrategy = opts.paramsInheritanceStrategy;\n    }\n    return router;\n}\nfunction rootRoute(router) {\n    return router.routerState.root;\n}\n/**\n * To initialize the router properly we need to do in two steps:\n *\n * We need to start the navigation in a APP_INITIALIZER to block the bootstrap if\n * a resolver or a guards executes asynchronously. Second, we need to actually run\n * activation in a BOOTSTRAP_LISTENER. We utilize the afterPreactivation\n * hook provided by the router to do that.\n *\n * The router navigation starts, reaches the point when preactivation is done, and then\n * pauses. It waits for the hook to be resolved. We then resolve it only in a bootstrap listener.\n */\nvar RouterInitializer = /** @class */ (function () {\n    function RouterInitializer(injector) {\n        this.injector = injector;\n        this.initNavigation = false;\n        this.resultOfPreactivationDone = new rxjs.Subject();\n    }\n    RouterInitializer.prototype.appInitializer = function () {\n        var _this = this;\n        var p = this.injector.get(common.LOCATION_INITIALIZED, Promise.resolve(null));\n        return p.then(function () {\n            var resolve = (null);\n            var res = new Promise(function (r) { return resolve = r; });\n            var router = _this.injector.get(Router);\n            var opts = _this.injector.get(ROUTER_CONFIGURATION);\n            if (_this.isLegacyDisabled(opts) || _this.isLegacyEnabled(opts)) {\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'disabled') {\n                router.setUpLocationChangeListener();\n                resolve(true);\n            }\n            else if (opts.initialNavigation === 'enabled') {\n                router.hooks.afterPreactivation = function () {\n                    // only the initial navigation should be delayed\n                    if (!_this.initNavigation) {\n                        _this.initNavigation = true;\n                        resolve(true);\n                        return _this.resultOfPreactivationDone;\n                        // subsequent navigations should not be delayed\n                    }\n                    else {\n                        return rxjs.of(null);\n                    }\n                };\n                router.initialNavigation();\n            }\n            else {\n                throw new Error(\"Invalid initialNavigation options: '\" + opts.initialNavigation + \"'\");\n            }\n            return res;\n        });\n    };\n    RouterInitializer.prototype.bootstrapListener = function (bootstrappedComponentRef) {\n        var opts = this.injector.get(ROUTER_CONFIGURATION);\n        var preloader = this.injector.get(RouterPreloader);\n        var router = this.injector.get(Router);\n        var ref = this.injector.get(core.ApplicationRef);\n        if (bootstrappedComponentRef !== ref.components[0]) {\n            return;\n        }\n        if (this.isLegacyEnabled(opts)) {\n            router.initialNavigation();\n        }\n        else if (this.isLegacyDisabled(opts)) {\n            router.setUpLocationChangeListener();\n        }\n        preloader.setUpPreloading();\n        router.resetRootComponentType(ref.componentTypes[0]);\n        this.resultOfPreactivationDone.next((null));\n        this.resultOfPreactivationDone.complete();\n    };\n    RouterInitializer.prototype.isLegacyEnabled = function (opts) {\n        return opts.initialNavigation === 'legacy_enabled' || opts.initialNavigation === true ||\n            opts.initialNavigation === undefined;\n    };\n    RouterInitializer.prototype.isLegacyDisabled = function (opts) {\n        return opts.initialNavigation === 'legacy_disabled' || opts.initialNavigation === false;\n    };\n    RouterInitializer.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    RouterInitializer.ctorParameters = function () { return [\n        { type: core.Injector, },\n    ]; };\n    return RouterInitializer;\n}());\nfunction getAppInitializer(r) {\n    return r.appInitializer.bind(r);\n}\nfunction getBootstrapListener(r) {\n    return r.bootstrapListener.bind(r);\n}\n/**\n * A token for the router initializer that will be called after the app is bootstrapped.\n *\n * @experimental\n */\nvar ROUTER_INITIALIZER = new core.InjectionToken('Router Initializer');\nfunction provideRouterInitializer() {\n    return [\n        RouterInitializer,\n        {\n            provide: core.APP_INITIALIZER,\n            multi: true,\n            useFactory: getAppInitializer,\n            deps: [RouterInitializer]\n        },\n        { provide: ROUTER_INITIALIZER, useFactory: getBootstrapListener, deps: [RouterInitializer] },\n        { provide: core.APP_BOOTSTRAP_LISTENER, multi: true, useExisting: ROUTER_INITIALIZER },\n    ];\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n *\n */\nvar VERSION = new core.Version('6.0.0-rc.4');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵangular_packages_router_router_a = ROUTER_FORROOT_GUARD;\nexports.ɵangular_packages_router_router_g = RouterInitializer;\nexports.ɵangular_packages_router_router_h = getAppInitializer;\nexports.ɵangular_packages_router_router_i = getBootstrapListener;\nexports.ɵangular_packages_router_router_d = provideForRootGuard;\nexports.ɵangular_packages_router_router_c = provideLocationStrategy;\nexports.ɵangular_packages_router_router_j = provideRouterInitializer;\nexports.ɵangular_packages_router_router_f = rootRoute;\nexports.ɵangular_packages_router_router_b = routerNgProbeToken;\nexports.ɵangular_packages_router_router_e = setupRouter;\nexports.ɵangular_packages_router_router_k = Tree;\nexports.ɵangular_packages_router_router_l = TreeNode;\nexports.RouterLink = RouterLink;\nexports.RouterLinkWithHref = RouterLinkWithHref;\nexports.RouterLinkActive = RouterLinkActive;\nexports.RouterOutlet = RouterOutlet;\nexports.ActivationEnd = ActivationEnd;\nexports.ActivationStart = ActivationStart;\nexports.ChildActivationEnd = ChildActivationEnd;\nexports.ChildActivationStart = ChildActivationStart;\nexports.GuardsCheckEnd = GuardsCheckEnd;\nexports.GuardsCheckStart = GuardsCheckStart;\nexports.NavigationCancel = NavigationCancel;\nexports.NavigationEnd = NavigationEnd;\nexports.NavigationError = NavigationError;\nexports.NavigationStart = NavigationStart;\nexports.ResolveEnd = ResolveEnd;\nexports.ResolveStart = ResolveStart;\nexports.RouteConfigLoadEnd = RouteConfigLoadEnd;\nexports.RouteConfigLoadStart = RouteConfigLoadStart;\nexports.RouterEvent = RouterEvent;\nexports.RoutesRecognized = RoutesRecognized;\nexports.RouteReuseStrategy = RouteReuseStrategy;\nexports.Router = Router;\nexports.ROUTES = ROUTES;\nexports.ROUTER_CONFIGURATION = ROUTER_CONFIGURATION;\nexports.ROUTER_INITIALIZER = ROUTER_INITIALIZER;\nexports.RouterModule = RouterModule;\nexports.provideRoutes = provideRoutes;\nexports.ChildrenOutletContexts = ChildrenOutletContexts;\nexports.OutletContext = OutletContext;\nexports.NoPreloading = NoPreloading;\nexports.PreloadAllModules = PreloadAllModules;\nexports.PreloadingStrategy = PreloadingStrategy;\nexports.RouterPreloader = RouterPreloader;\nexports.ActivatedRoute = ActivatedRoute;\nexports.ActivatedRouteSnapshot = ActivatedRouteSnapshot;\nexports.RouterState = RouterState;\nexports.RouterStateSnapshot = RouterStateSnapshot;\nexports.PRIMARY_OUTLET = PRIMARY_OUTLET;\nexports.convertToParamMap = convertToParamMap;\nexports.UrlHandlingStrategy = UrlHandlingStrategy;\nexports.DefaultUrlSerializer = DefaultUrlSerializer;\nexports.UrlSegment = UrlSegment;\nexports.UrlSegmentGroup = UrlSegmentGroup;\nexports.UrlSerializer = UrlSerializer;\nexports.UrlTree = UrlTree;\nexports.VERSION = VERSION;\nexports.ɵROUTER_PROVIDERS = ROUTER_PROVIDERS;\nexports.ɵflatten = flatten;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=router.umd.js.map\n"]}